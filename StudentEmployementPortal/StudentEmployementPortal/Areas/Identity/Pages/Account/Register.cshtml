@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1 class="row justify-content-center">@ViewData["Title"]</h1>

<div class="row justify-content-center">
    <div class="col-md-4">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2 class="row justify-content-center">Create a new account.</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-floating">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" />
                <label asp-for="Input.Email"></label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-floating">
                <input asp-for="Input.FirstName" class="form-control" aria-required="true" />
                <label asp-for="Input.FirstName"></label>
                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
            </div>
            <div class="form-floating">
                <input asp-for="Input.LastName" class="form-control" aria-required="true" />
                <label asp-for="Input.LastName"></label>
                <span asp-validation-for="Input.LastName" class="text-danger"></span>
            </div>
            <div class="form-floating">
                <input asp-for="Input.CellNumber" class="form-control" aria-required="true" id="cellNumber" />
                <label asp-for="Input.CellNumber"></label>
                <span asp-validation-for="Input.CellNumber" class="text-danger" id="cellNumberError"></span>
            </div>
            <div class="form-floating">
                <input asp-for="Input.TelNumber" class="form-control" aria-required="false" id="telNumber" />
                <label asp-for="Input.TelNumber"></label>
                <span asp-validation-for="Input.TelNumber" class="text-danger" id="telNumberError"></span>
            </div>
            <div class="form-floating">
                <select asp-for="Input.Role" asp-items="@Model.Input.Roles" class="form-control">
                    <option disabled selected>Select Role</option>
                </select>
            </div>
            <div class="form-floating">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^\da-zA-Z]).{6,}$" aria-required="true" />
                <label asp-for="Input.Password"></label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" />
                <label asp-for="Input.ConfirmPassword"></label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Get the form and form elements
        const form = document.getElementById("registerForm");
        const cellNumberField = document.getElementById("cellNumber");
        const telNumberField = document.getElementById("telNumber");
        const cellNumberError = document.getElementById("cellNumberError");
        const telNumberError = document.getElementById("telNumberError");

        // Regular expressions for cell number and telephone number formats
        const cellNumberRegex = /^(?:\+27|0)[1-9]\d{8}$/; // South African cell number format
        const telNumberRegex = /^(?:\+27|0)\d{8,}$/; // South African telephone number format

        // Function to validate cell number
        function validateCellNumber() {
            if (!cellNumberRegex.test(cellNumberField.value)) {
                cellNumberError.style.display = "block";
                cellNumberError.textContent = "Your phone number is invalid";
                return false;
            } else {
                cellNumberError.style.display = "none";
                return true;
            }
        }

        // Function to validate telephone number
        function validateTelNumber() {
            if (telNumberField.value !== "" && !telNumberRegex.test(telNumberField.value)) {
                telNumberError.style.display = "block";
                telNumberError.textContent = "Your phone number is invalid";
                return false;
            } else {
                telNumberError.style.display = "none";
                return true;
            }
        }

        // Event listeners for form submission and field input/change
        form.addEventListener("submit", function (event) {
            if (!validateCellNumber() || !validateTelNumber()) {
                event.preventDefault(); // Prevent form submission if validation fails
            }
        });

        cellNumberField.addEventListener("input", validateCellNumber);
        telNumberField.addEventListener("input", validateTelNumber);

    </script>
}
