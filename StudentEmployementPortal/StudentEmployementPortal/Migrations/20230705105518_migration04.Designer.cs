// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentEmployementPortal.Data;

#nullable disable

namespace StudentEmployementPortal.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230705105518_migration04")]
    partial class migration04
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<int>("ApplicationStatus")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("PostId");

                    b.HasIndex("StudentId");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.BusinessType", b =>
                {
                    b.Property<int>("BusinessTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessTypeId"));

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusinessTypeId");

                    b.ToTable("BusinessTypes");

                    b.HasData(
                        new
                        {
                            BusinessTypeId = 1,
                            BusinessName = "Sole Proprietorship"
                        },
                        new
                        {
                            BusinessTypeId = 2,
                            BusinessName = "Partnership"
                        },
                        new
                        {
                            BusinessTypeId = 3,
                            BusinessName = "Private Limited Company (Pty Ltd)"
                        },
                        new
                        {
                            BusinessTypeId = 4,
                            BusinessName = "Public Limited Company (Ltd)"
                        },
                        new
                        {
                            BusinessTypeId = 5,
                            BusinessName = "Close Corporation (CC)"
                        },
                        new
                        {
                            BusinessTypeId = 6,
                            BusinessName = "Nonprofit Organization (NPO)"
                        },
                        new
                        {
                            BusinessTypeId = 7,
                            BusinessName = "State Owned Entity (SOE)"
                        },
                        new
                        {
                            BusinessTypeId = 8,
                            BusinessName = "Other"
                        });
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "Accountancy",
                            FacultyId = 1
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "Business Sciences",
                            FacultyId = 1
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "Economics and Finance",
                            FacultyId = 1
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentName = "Law",
                            FacultyId = 1
                        },
                        new
                        {
                            DepartmentId = 5,
                            DepartmentName = "Wits Business School",
                            FacultyId = 1
                        },
                        new
                        {
                            DepartmentId = 6,
                            DepartmentName = "Wits School of Governance",
                            FacultyId = 1
                        },
                        new
                        {
                            DepartmentId = 7,
                            DepartmentName = "Architecture and Planning",
                            FacultyId = 2
                        },
                        new
                        {
                            DepartmentId = 8,
                            DepartmentName = "Civil & Environmental Engineering",
                            FacultyId = 2
                        },
                        new
                        {
                            DepartmentId = 9,
                            DepartmentName = "Chemical & Metallurgical Engineering",
                            FacultyId = 2
                        },
                        new
                        {
                            DepartmentId = 10,
                            DepartmentName = "Construction Economics & Management",
                            FacultyId = 2
                        },
                        new
                        {
                            DepartmentId = 11,
                            DepartmentName = "Electrical & Information Engineeringg",
                            FacultyId = 2
                        },
                        new
                        {
                            DepartmentId = 12,
                            DepartmentName = "Mechanical, Industrial & Aeronautical Engineering",
                            FacultyId = 2
                        },
                        new
                        {
                            DepartmentId = 13,
                            DepartmentName = "Mining Engineering",
                            FacultyId = 2
                        },
                        new
                        {
                            DepartmentId = 14,
                            DepartmentName = "Anatomical Sciences",
                            FacultyId = 3
                        },
                        new
                        {
                            DepartmentId = 15,
                            DepartmentName = "Clinical Medicine",
                            FacultyId = 3
                        },
                        new
                        {
                            DepartmentId = 16,
                            DepartmentName = "Oral Health Sciences",
                            FacultyId = 3
                        },
                        new
                        {
                            DepartmentId = 17,
                            DepartmentName = "Pathology",
                            FacultyId = 3
                        },
                        new
                        {
                            DepartmentId = 18,
                            DepartmentName = "Physiology",
                            FacultyId = 3
                        },
                        new
                        {
                            DepartmentId = 19,
                            DepartmentName = "Public Health",
                            FacultyId = 3
                        },
                        new
                        {
                            DepartmentId = 20,
                            DepartmentName = "Therapeutic Sciences",
                            FacultyId = 3
                        },
                        new
                        {
                            DepartmentId = 21,
                            DepartmentName = "Wits School of Arts",
                            FacultyId = 4
                        },
                        new
                        {
                            DepartmentId = 22,
                            DepartmentName = "Wits School of Education",
                            FacultyId = 4
                        },
                        new
                        {
                            DepartmentId = 23,
                            DepartmentName = "Human and Community Development",
                            FacultyId = 4
                        },
                        new
                        {
                            DepartmentId = 24,
                            DepartmentName = "Literature, Language and Media",
                            FacultyId = 4
                        },
                        new
                        {
                            DepartmentId = 25,
                            DepartmentName = "Social Sciences",
                            FacultyId = 4
                        },
                        new
                        {
                            DepartmentId = 26,
                            DepartmentName = "Animal, Plant and Environmental Sciences",
                            FacultyId = 5
                        },
                        new
                        {
                            DepartmentId = 27,
                            DepartmentName = "Chemistry",
                            FacultyId = 5
                        },
                        new
                        {
                            DepartmentId = 28,
                            DepartmentName = "Computer Science and Applied Mathematics",
                            FacultyId = 5
                        },
                        new
                        {
                            DepartmentId = 29,
                            DepartmentName = "Geography, Archaeology and Environmental Sciences",
                            FacultyId = 5
                        },
                        new
                        {
                            DepartmentId = 30,
                            DepartmentName = "Geosciences",
                            FacultyId = 5
                        },
                        new
                        {
                            DepartmentId = 31,
                            DepartmentName = "Mathematics",
                            FacultyId = 5
                        },
                        new
                        {
                            DepartmentId = 32,
                            DepartmentName = "Molecular and Cell Biology",
                            FacultyId = 5
                        },
                        new
                        {
                            DepartmentId = 33,
                            DepartmentName = "Physics",
                            FacultyId = 5
                        },
                        new
                        {
                            DepartmentId = 34,
                            DepartmentName = "Statistics and Actuarial Science",
                            FacultyId = 5
                        });
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("FileDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.DriversLicense", b =>
                {
                    b.Property<int>("LicenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LicenseId"));

                    b.Property<string>("LicenceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LicenseId");

                    b.ToTable("Licences");

                    b.HasData(
                        new
                        {
                            LicenseId = 1,
                            LicenceName = "Code A1 driver's license"
                        },
                        new
                        {
                            LicenseId = 2,
                            LicenceName = "Code A driver's license"
                        },
                        new
                        {
                            LicenseId = 3,
                            LicenceName = "Code B driver's license"
                        },
                        new
                        {
                            LicenseId = 4,
                            LicenceName = "Code B5 driver's license"
                        },
                        new
                        {
                            LicenseId = 5,
                            LicenceName = "Code B7 driver's license"
                        },
                        new
                        {
                            LicenseId = 6,
                            LicenceName = "Code C driver's license"
                        },
                        new
                        {
                            LicenseId = 7,
                            LicenceName = "Code C1 driver's license"
                        },
                        new
                        {
                            LicenseId = 8,
                            LicenceName = "Code EB driver's license"
                        },
                        new
                        {
                            LicenseId = 9,
                            LicenceName = "Code EC driver's license"
                        },
                        new
                        {
                            LicenseId = 10,
                            LicenceName = "Code EC1 driver's license"
                        },
                        new
                        {
                            LicenseId = 11,
                            LicenceName = "Code EC1-8 driver's license"
                        },
                        new
                        {
                            LicenseId = 12,
                            LicenceName = "None"
                        });
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducationId"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Majors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Research")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubMajors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subjects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EducationId");

                    b.HasIndex("StudentUserId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Employer", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApproverNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<int>("EmployerId")
                        .HasColumnType("int");

                    b.Property<int>("EmployerStatus")
                        .HasColumnType("int");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisteredAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.Property<string>("TradingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrueInfo")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("TitleId");

                    b.ToTable("Employers");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyId"));

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacultyId");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            FacultyId = 1,
                            FacultyName = "Faculty of Commerce, Law and Management"
                        },
                        new
                        {
                            FacultyId = 2,
                            FacultyName = "Faculty of Engineering and the Built Environment"
                        },
                        new
                        {
                            FacultyId = 3,
                            FacultyName = "Faculty of Health Sciences"
                        },
                        new
                        {
                            FacultyId = 4,
                            FacultyName = "Faculty of Humanities"
                        },
                        new
                        {
                            FacultyId = 5,
                            FacultyName = "Faculty of Science"
                        });
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            GenderId = 1,
                            GenderName = "Male"
                        },
                        new
                        {
                            GenderId = 2,
                            GenderName = "Female"
                        },
                        new
                        {
                            GenderId = 3,
                            GenderName = "Non-binary"
                        },
                        new
                        {
                            GenderId = 4,
                            GenderName = "Other"
                        },
                        new
                        {
                            GenderId = 5,
                            GenderName = "Prefer not to say."
                        });
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.JobPost", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<string>("ApplicationInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CitizensOnly")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ClosingDate")
                        .IsRequired()
                        .HasColumnType("Date");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("EmployerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("Date");

                    b.Property<int?>("FacultyId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("FullTime")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<double?>("HourlyRate")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<bool?>("Internal")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyResponsibilities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinRequirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartTimeHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("Date");

                    b.Property<bool>("limitedToFirst")
                        .HasColumnType("bit");

                    b.Property<bool>("limitedToHonours")
                        .HasColumnType("bit");

                    b.Property<bool>("limitedToMasters")
                        .HasColumnType("bit");

                    b.Property<bool>("limitedToPhD")
                        .HasColumnType("bit");

                    b.Property<bool>("limitedToPostDoc")
                        .HasColumnType("bit");

                    b.Property<bool>("limitedToSecond")
                        .HasColumnType("bit");

                    b.Property<bool>("limitedToThird")
                        .HasColumnType("bit");

                    b.HasKey("PostId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployerId");

                    b.HasIndex("FacultyId");

                    b.ToTable("JobPosts");

                    b.HasData(
                        new
                        {
                            PostId = 51,
                            ApplicationInstructions = "Nulla deleniti quos reprehenderit omnis. Distinctio facilis facilis. Voluptate vitae repudiandae itaque reprehenderit et saepe accusamus. Distinctio rerum corporis ut quisquam. Aliquam inventore doloremque dignissimos voluptates quia porro voluptas doloremque. Ullam aut odit.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2024, 2, 16, 15, 14, 3, 767, DateTimeKind.Local).AddTicks(2694),
                            ContactEmail = "Ebony_Gottlieb83@yahoo.com",
                            ContactNumber = "1-487-596-4012",
                            ContactPerson = "Ebony Gottlieb",
                            DepartmentId = 23,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 11, 13, 9, 37, 15, 354, DateTimeKind.Local).AddTicks(4396),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 118.48169864084652,
                            Internal = false,
                            JobDescription = "Unde corrupti sunt repellat molestias et et esse qui a. Corrupti dolore aliquam quis ut dolore assumenda sunt molestias illo. Velit minus et eligendi ipsam aut fugiat sunt.",
                            JobLocation = "qui",
                            JobTitle = "Aut in numquam labore numquam iure. Rerum harum atque rerum quidem totam. Distinctio similique illo suscipit sed est repudiandae. Quis ex vel illum fugit et qui nemo error dolor. Nulla qui aut quia consequatur iste sit illo. Repellat quo temporibus voluptatibus modi aut.",
                            KeyResponsibilities = "Eaque veritatis magnam ratione atque. Aut vero eos qui. Provident inventore voluptas et assumenda.",
                            MinRequirements = "Commodi nobis et ab omnis ex omnis. Sint sunt similique qui mollitia nemo optio. Enim quas molestiae officia commodi. Eos laudantium ratione neque et cupiditate ex tempore autem voluptatem. Animi dignissimos sed. Doloribus veniam eveniet.",
                            PartTimeHours = "2 - 4",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 8, 27, 12, 13, 17, 962, DateTimeKind.Local).AddTicks(9978),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 52,
                            ApplicationInstructions = "Dolore quas laboriosam provident. Ea consequatur perspiciatis expedita voluptas ducimus ab adipisci. Culpa iusto perspiciatis quidem similique molestiae non. Voluptas perferendis dolorem voluptas sit consequatur blanditiis. Minima numquam rerum eos nihil rerum.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2024, 1, 4, 11, 4, 38, 215, DateTimeKind.Local).AddTicks(7671),
                            ContactEmail = "Josephine76@hotmail.com",
                            ContactNumber = "236-279-1995 x6135",
                            ContactPerson = "Josephine O'Conner",
                            DepartmentId = 28,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 4, 3, 23, 13, 51, 960, DateTimeKind.Local).AddTicks(3595),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 335.37156797729972,
                            Internal = true,
                            JobDescription = "In ex vel est ratione. Incidunt in in est incidunt. Suscipit aut recusandae quia optio nobis distinctio voluptas commodi autem.",
                            JobLocation = "eius",
                            JobTitle = "Natus incidunt voluptate suscipit. Quidem non labore. Non ab sint esse.",
                            KeyResponsibilities = "Assumenda voluptatem sed eos sunt quia ipsum minima laudantium. Quod veniam saepe itaque. Eos vel occaecati tenetur optio repellat doloribus. Non mollitia libero aspernatur. Est consequuntur omnis ut beatae perspiciatis mollitia non nobis.",
                            MinRequirements = "Quasi reprehenderit tenetur earum ipsum vel aliquid. Ullam et architecto libero in. Rerum repellendus dolor sit consequatur perspiciatis. Accusantium ullam iste laboriosam eum voluptatum sed ut nisi beatae. Occaecati consequatur aut nemo quae quae. Ratione et aliquid.",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 8, 18, 10, 47, 4, 853, DateTimeKind.Local).AddTicks(5446),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 53,
                            ApplicationInstructions = "Iure molestiae voluptatibus nulla. Alias maxime commodi sunt nostrum nam dolorum quia quia iure. Aut sunt sit qui reprehenderit.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2024, 4, 16, 7, 8, 32, 262, DateTimeKind.Local).AddTicks(787),
                            ContactEmail = "Joseph_Kilback@yahoo.com",
                            ContactNumber = "424.213.0804 x23266",
                            ContactPerson = "Joseph Kilback",
                            DepartmentId = 11,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 3, 26, 1, 50, 25, 702, DateTimeKind.Local).AddTicks(3491),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 212.79968785252407,
                            Internal = false,
                            JobDescription = "Consequatur a sit sit voluptatem sit. Quisquam quas consequatur hic. Velit nihil dolor commodi maiores voluptatum magnam molestiae temporibus eveniet. Consequatur rerum molestiae distinctio. Voluptatem omnis dolor placeat qui voluptatibus aut.",
                            JobLocation = "necessitatibus",
                            JobTitle = "Sit non sunt nesciunt et quaerat sit aut. Cumque non aperiam reiciendis eos rerum expedita aut. Autem ducimus mollitia occaecati omnis similique quod tempora velit. Molestiae minus nostrum mollitia. Facere quasi asperiores numquam quod.",
                            KeyResponsibilities = "Nihil qui repellat voluptates itaque qui et. Sit voluptas et quia iure modi consequuntur. Vel consequatur esse iure inventore aut unde recusandae. Laborum quisquam tempora et facilis dignissimos. Amet qui quod qui cupiditate.",
                            MinRequirements = "Perferendis nihil officia asperiores aut et dolorem non. Fuga velit et. Quia consectetur quos eligendi. Veritatis et voluptas aut in perspiciatis sed rerum dolores itaque. Deleniti maiores dolores id autem in delectus.",
                            PartTimeHours = "4 - 6",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 1, 8, 9, 57, 27, 6, DateTimeKind.Local).AddTicks(2261),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 54,
                            ApplicationInstructions = "Repudiandae quis voluptate quia saepe animi nostrum. Non aut mollitia fugit incidunt exercitationem magnam nesciunt ex. Molestias consequatur quaerat. Quia non veritatis delectus non. Est assumenda et ut dolorum nam repellendus est. Nulla et dolor at et.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 9, 1, 4, 12, 8, 950, DateTimeKind.Local).AddTicks(3569),
                            ContactEmail = "Alberta16@yahoo.com",
                            ContactNumber = "623.202.6824",
                            ContactPerson = "Alberta Bartell",
                            DepartmentId = 15,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 5, 20, 10, 15, 5, 287, DateTimeKind.Local).AddTicks(1289),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 272.99861359549618,
                            Internal = false,
                            JobDescription = "Impedit aliquam unde dolorem et modi enim eos. Sunt nemo in aut deleniti fugit molestiae reprehenderit. Beatae omnis accusamus sit quos similique excepturi. Aut excepturi rerum qui excepturi et maxime. Eius aut quam ipsa vitae laudantium dolores.",
                            JobLocation = "vel",
                            JobTitle = "Quia laborum debitis qui qui.\nAd unde eum repellendus vel omnis.",
                            KeyResponsibilities = "Aut esse omnis repudiandae et veritatis cum fugiat. Quaerat nemo molestias ut dolores et ut. Quo ducimus non corporis repudiandae non. Aut laboriosam ut vitae repudiandae minus voluptas quae iusto. Voluptatibus quae id totam optio maiores. Autem voluptatem et nihil quidem eaque dolor recusandae.",
                            MinRequirements = "Nam ipsam est ex amet. Reiciendis aut qui dolorem mollitia sint. Quam voluptatem quasi delectus sint similique non voluptatem sit. Non non necessitatibus enim ea ipsum. Blanditiis ratione aliquid iusto dolor.",
                            PartTimeHours = "8 - 12",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 11, 18, 6, 50, 41, 646, DateTimeKind.Local).AddTicks(3391),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 55,
                            ApplicationInstructions = "Ea voluptatem est id iste et tenetur. Inventore nihil suscipit inventore quia libero magnam. Quo distinctio doloribus sit eius.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 8, 31, 18, 13, 48, 911, DateTimeKind.Local).AddTicks(2460),
                            ContactEmail = "Scott_Kub@gmail.com",
                            ContactNumber = "1-930-844-4160 x89749",
                            ContactPerson = "Scott Kub",
                            DepartmentId = 4,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 2, 19, 12, 42, 22, 720, DateTimeKind.Local).AddTicks(8102),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 397.86236104455884,
                            Internal = true,
                            JobDescription = "Magnam architecto molestias aut culpa aut dolorem sunt. Dicta facilis quam ab iste autem. Et et non voluptas quo. Assumenda et ut. Quos labore delectus dolorem consequatur voluptas minus et.",
                            JobLocation = "ex",
                            JobTitle = "Quis mollitia saepe at rerum aut provident dolore velit cumque.\nNisi autem cum quis ullam et quia corporis necessitatibus quo.",
                            KeyResponsibilities = "Molestiae est veniam ad voluptatem est. Velit magni enim dolorum minima sit. Eos consectetur quibusdam dicta quisquam dignissimos. Quia dolorum autem magni ipsa iusto impedit dolor ea. Nesciunt et sed ut. Id optio non natus.",
                            MinRequirements = "Repellendus architecto facere qui tenetur et veritatis. Molestias aut fugit dolores est animi maiores corrupti qui minima. Quo sit est aut praesentium. Numquam laudantium et qui aspernatur officiis neque nam nostrum. Unde eaque id dicta similique facilis adipisci. Ex quae recusandae et consequatur quaerat sed iste recusandae.",
                            PartTimeHours = "2 - 4",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 7, 23, 0, 10, 47, 718, DateTimeKind.Local).AddTicks(4744),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 56,
                            ApplicationInstructions = "Pariatur excepturi et accusantium. Suscipit voluptatem vel placeat autem non. Qui adipisci tempora est ratione et vel eos omnis. Et aut et in molestiae repellat. Dignissimos omnis reiciendis sapiente molestiae necessitatibus fugit consequuntur quidem.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2024, 5, 11, 3, 29, 11, 273, DateTimeKind.Local).AddTicks(2459),
                            ContactEmail = "Alfonso0@yahoo.com",
                            ContactNumber = "(928) 996-6758 x352",
                            ContactPerson = "Alfonso Wiza",
                            DepartmentId = 23,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 1, 19, 18, 17, 32, 930, DateTimeKind.Local).AddTicks(455),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 202.04497838953742,
                            Internal = false,
                            JobDescription = "Error qui numquam excepturi natus magni totam quibusdam accusamus. Dignissimos aut totam voluptas libero rem est. Nesciunt et et voluptatem earum corporis aperiam omnis quo. Corporis aut deleniti excepturi dolorem excepturi. Minus dolorem aliquid omnis id.",
                            JobLocation = "odit",
                            JobTitle = "Alias et molestias quia aliquam.\nTotam quis deleniti cumque sapiente dolore.",
                            KeyResponsibilities = "Deleniti consequatur nostrum repellat quos possimus eos recusandae veniam a. Itaque corporis exercitationem sed quam et ad. Est corporis vel ipsa. Numquam rerum facilis aut aperiam consequuntur unde illo. Aliquam officiis perspiciatis ducimus aut eos autem aut quasi. Omnis culpa ipsam sed ipsum.",
                            MinRequirements = "Eveniet nobis inventore. Est aspernatur sapiente in. Est fugit doloremque eveniet sequi velit corrupti dicta quae.",
                            PartTimeHours = "< 2",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 12, 2, 6, 13, 3, 713, DateTimeKind.Local).AddTicks(7821),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 57,
                            ApplicationInstructions = "Aut iusto ducimus est dolorum asperiores et quis. Mollitia et libero aut molestiae maiores voluptas. Optio sed ipsam exercitationem sed iure non qui sint et. Voluptates ut maxime.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2023, 7, 22, 23, 51, 51, 508, DateTimeKind.Local).AddTicks(9073),
                            ContactEmail = "Erika_Kuvalis60@hotmail.com",
                            ContactNumber = "1-910-494-5906 x4762",
                            ContactPerson = "Erika Kuvalis",
                            DepartmentId = 21,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 4, 4, 17, 34, 5, 869, DateTimeKind.Local).AddTicks(1726),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 291.13695842266873,
                            Internal = false,
                            JobDescription = "Sapiente ut nam sint. Non et illum excepturi omnis ducimus accusamus doloremque dolorum consequatur. Dolor vel illo non a reprehenderit doloribus quae labore unde. Laboriosam sed autem ex at quam ut qui.",
                            JobLocation = "blanditiis",
                            JobTitle = "Perferendis voluptas et dolores repellendus ea earum laboriosam aut ullam.",
                            KeyResponsibilities = "Qui vero est ducimus. Sunt reiciendis dolorum soluta. Modi neque et dolores ea. Ducimus corrupti voluptatum unde culpa magnam commodi. Ipsam praesentium est et odit.",
                            MinRequirements = "Voluptate eligendi veritatis est et neque. Quis sunt deleniti cumque dolore rerum ut blanditiis debitis et. Nisi necessitatibus fuga qui aspernatur natus voluptatum quos ea dolores. Delectus ut excepturi dolor itaque illum totam iste. Et et voluptatum sed et quasi. Consequatur quisquam maxime eos culpa tenetur tempore omnis aut vel.",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 3, 12, 21, 37, 42, 530, DateTimeKind.Local).AddTicks(2716),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 58,
                            ApplicationInstructions = "Dolore assumenda ab laborum. Doloribus molestiae facere. In accusamus eius ab et dolor qui natus. Incidunt laborum libero natus vitae. Nihil corrupti quaerat vero odio non voluptas maiores itaque voluptatum. Dolorem aliquam inventore atque eum omnis deleniti.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 10, 12, 23, 29, 55, 653, DateTimeKind.Local).AddTicks(8244),
                            ContactEmail = "Mitchell.Anderson@yahoo.com",
                            ContactNumber = "852.251.1707",
                            ContactPerson = "Mitchell Anderson",
                            DepartmentId = 20,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 8, 15, 6, 27, 6, 249, DateTimeKind.Local).AddTicks(2292),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 102.00525333732611,
                            Internal = false,
                            JobDescription = "Distinctio autem ea non. Possimus recusandae aut eaque labore deleniti nobis. Quia voluptates mollitia minus quasi ipsam aut quidem. Veniam in nemo aliquid error et qui ea fugiat amet.",
                            JobLocation = "sunt",
                            JobTitle = "Vitae qui nisi soluta mollitia. Rerum optio asperiores repudiandae eos magni voluptatem necessitatibus aspernatur impedit. Consequatur occaecati est explicabo. Eius nesciunt consectetur et maiores quidem ea nostrum mollitia.",
                            KeyResponsibilities = "Qui excepturi alias est harum molestias soluta itaque qui. Reprehenderit numquam iusto aliquid non corporis consequuntur. Quisquam ea quos. Aliquam excepturi amet corrupti. Ut enim exercitationem cumque. Quis ad similique autem aspernatur.",
                            MinRequirements = "Eos quo fugiat excepturi et dolorem rerum. Vitae inventore sit minima enim debitis commodi commodi aliquid. Quos ut qui laboriosam quo. Nostrum aut architecto voluptas nesciunt repellendus iste quia. Corrupti vero error expedita. Aut nobis labore minus dicta repudiandae reiciendis perferendis.",
                            PartTimeHours = "2 - 4",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 1, 6, 22, 9, 51, 133, DateTimeKind.Local).AddTicks(6733),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 59,
                            ApplicationInstructions = "Ad ut est. Cupiditate qui est. Commodi aliquam eos mollitia officiis neque ad totam. Et ea aut quia et quae. Natus et perspiciatis fugit et odit eveniet unde quod consequatur. Repellendus veritatis ut voluptas nihil a id pariatur rerum.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2024, 6, 15, 22, 30, 17, 434, DateTimeKind.Local).AddTicks(582),
                            ContactEmail = "Ignacio28@yahoo.com",
                            ContactNumber = "832-626-5237",
                            ContactPerson = "Ignacio Gleason",
                            DepartmentId = 9,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 1, 23, 23, 33, 16, 833, DateTimeKind.Local).AddTicks(9583),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 131.55528487710063,
                            Internal = true,
                            JobDescription = "Molestiae maiores impedit quibusdam earum. Ut aut repudiandae distinctio corporis id quas est et. Et aliquam ex officia at veritatis nemo. Voluptate ipsa rem voluptatibus pariatur totam.",
                            JobLocation = "assumenda",
                            JobTitle = "omnis",
                            KeyResponsibilities = "Natus voluptate ut dolorem ratione consequatur quidem saepe velit atque. Voluptas id sint eum quia. Deserunt pariatur nihil eos cum eius reprehenderit. Minima natus aliquam ducimus necessitatibus sed amet modi pariatur ut.",
                            MinRequirements = "Sunt non qui eius ipsum. Consequatur vitae velit. Totam laudantium ut quia molestias cumque vero perferendis aut.",
                            PartTimeHours = "8 - 12",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 3, 7, 13, 51, 28, 45, DateTimeKind.Local).AddTicks(4976),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 60,
                            ApplicationInstructions = "Corrupti consequatur quia ullam temporibus sed occaecati quae similique. Quo sint nesciunt. Ut voluptatem rerum. Labore quis sed eos quis quia consectetur id sit. Asperiores sunt corporis veniam ut. Corrupti sed odio nesciunt error inventore eum.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2023, 11, 18, 5, 21, 21, 870, DateTimeKind.Local).AddTicks(8446),
                            ContactEmail = "Emmett40@yahoo.com",
                            ContactNumber = "737.696.1409 x0764",
                            ContactPerson = "Emmett Bergnaum",
                            DepartmentId = 21,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 8, 22, 6, 17, 5, 432, DateTimeKind.Local).AddTicks(3522),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 228.18623724309086,
                            Internal = true,
                            JobDescription = "Id perspiciatis voluptate. Tempora in esse sequi ut magni animi. Ut beatae et odit amet sint dolore. Deleniti placeat et. Fuga sint cumque dolorem.",
                            JobLocation = "est",
                            JobTitle = "sit",
                            KeyResponsibilities = "Quia soluta dolor dolor veritatis temporibus debitis culpa. Tenetur voluptatem maxime delectus qui quia quidem illo autem ut. Dolores sed vero aut et sint impedit. Officia molestiae magni hic veritatis repudiandae modi qui. Voluptas consequuntur est.",
                            MinRequirements = "Perspiciatis autem minima quam expedita autem. Amet tempore voluptas rerum a neque qui. Libero ut qui vitae dolor doloribus quas qui sed. Illo sint est dolorum est magnam vel numquam.",
                            PartTimeHours = "< 2",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 6, 21, 10, 41, 32, 233, DateTimeKind.Local).AddTicks(8445),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 61,
                            ApplicationInstructions = "Amet voluptatem ullam sit cumque exercitationem. Voluptas expedita porro. Rerum nam sunt harum modi accusamus autem. Recusandae quo voluptate tempora eligendi incidunt nisi omnis accusamus.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2024, 5, 26, 11, 19, 39, 684, DateTimeKind.Local).AddTicks(1932),
                            ContactEmail = "Fannie.Brown@gmail.com",
                            ContactNumber = "(523) 746-0956",
                            ContactPerson = "Fannie Brown",
                            DepartmentId = 32,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 8, 22, 0, 9, 27, 201, DateTimeKind.Local).AddTicks(1020),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 381.98387333284313,
                            Internal = false,
                            JobDescription = "Eveniet et expedita expedita error. Ea eligendi error sed consequatur quis dolorem rerum sit ea. Quam odio debitis doloremque.",
                            JobLocation = "suscipit",
                            JobTitle = "ea",
                            KeyResponsibilities = "Molestiae est tenetur ea sed dolores neque reprehenderit qui. Maiores aut cupiditate optio eos dolor tempora eius consequuntur totam. Qui tempore eum velit nisi et veniam. Natus occaecati ullam inventore. Aut facere quod quia alias tempore quia iusto illum.",
                            MinRequirements = "Dolores saepe maxime perferendis pariatur aut. Incidunt dolores adipisci laboriosam recusandae quia neque adipisci cumque debitis. Voluptatem nihil nobis hic.",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 8, 10, 22, 39, 20, 766, DateTimeKind.Local).AddTicks(100),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 62,
                            ApplicationInstructions = "Ea et nostrum ab unde explicabo atque ut earum veritatis. Porro occaecati id eum fugit nesciunt consequatur eaque est officia. Nostrum nostrum earum. Ea iure eaque tempora.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2024, 2, 21, 23, 59, 45, 356, DateTimeKind.Local).AddTicks(9903),
                            ContactEmail = "Delbert71@gmail.com",
                            ContactNumber = "(531) 576-2144 x609",
                            ContactPerson = "Delbert Gleason",
                            DepartmentId = 33,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 10, 20, 14, 32, 45, 457, DateTimeKind.Local).AddTicks(1708),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 320.78268321733111,
                            Internal = false,
                            JobDescription = "Et repellendus blanditiis sint sit aut. Molestiae consequatur et aperiam ut non numquam. Voluptatum sed error quo quis. Possimus reprehenderit dolore et repellat aut consequatur.",
                            JobLocation = "id",
                            JobTitle = "eos",
                            KeyResponsibilities = "In voluptatum id veniam repudiandae dolor amet. Fugit quibusdam nam beatae earum voluptas. Fugiat aut ut voluptatum excepturi dolorem repellendus corrupti. Non corporis suscipit eos ut amet. Veritatis voluptatem quod tenetur quod est consectetur quia.",
                            MinRequirements = "Rerum atque a est ipsum tempore incidunt. Provident at eum iure sed odio. Maiores nisi architecto laborum ducimus quia dolorem molestiae vitae. Possimus sed vel maiores tempora est veritatis. Maiores minima corporis provident libero eaque et aut. Nihil sit rerum tempore sed ullam.",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 8, 20, 4, 33, 23, 877, DateTimeKind.Local).AddTicks(4776),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 63,
                            ApplicationInstructions = "Sit iusto animi id quibusdam. Voluptate illum nam assumenda. Molestiae dicta tenetur. Voluptas delectus itaque consequatur corrupti at vel molestiae. Repellendus maiores ex at animi.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 11, 9, 1, 47, 48, 405, DateTimeKind.Local).AddTicks(4541),
                            ContactEmail = "Edwin.Barton@hotmail.com",
                            ContactNumber = "786.293.0213 x461",
                            ContactPerson = "Edwin Barton",
                            DepartmentId = 15,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 9, 3, 7, 32, 58, 593, DateTimeKind.Local).AddTicks(7137),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 244.09749090862343,
                            Internal = false,
                            JobDescription = "Ab sunt vel facilis totam ut earum et laudantium cum. Voluptatem officia consectetur provident officia labore aperiam quibusdam aut. Reiciendis aut qui tenetur. Exercitationem tenetur vel. Omnis eius possimus pariatur perferendis vero enim nemo enim. Accusantium iusto ut consequatur.",
                            JobLocation = "illo",
                            JobTitle = "voluptas",
                            KeyResponsibilities = "Qui fugit illum aut aut. Architecto praesentium commodi eligendi praesentium et doloribus nobis. Consequuntur in natus id dolor cum voluptatem recusandae.",
                            MinRequirements = "Dolor temporibus architecto corporis qui saepe dolorem. Cumque quam expedita minus. Expedita nesciunt earum qui voluptates laborum. Maiores eaque facere non soluta voluptatum et aut recusandae. Beatae sit illo ut voluptatem eveniet repellat. Ut quibusdam exercitationem inventore.",
                            PartTimeHours = "2 - 4",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 9, 26, 2, 29, 51, 677, DateTimeKind.Local).AddTicks(2239),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 64,
                            ApplicationInstructions = "Tempore laborum qui non voluptas in aut optio necessitatibus. Quis sed officia natus et culpa. Eaque non qui aliquam velit. Distinctio asperiores culpa nemo ducimus. Ducimus est eligendi magnam.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2024, 1, 18, 13, 7, 15, 635, DateTimeKind.Local).AddTicks(3340),
                            ContactEmail = "Emanuel_Kilback49@gmail.com",
                            ContactNumber = "410-546-2666 x8345",
                            ContactPerson = "Emanuel Kilback",
                            DepartmentId = 7,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 4, 21, 2, 39, 38, 571, DateTimeKind.Local).AddTicks(5757),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 255.55008189079823,
                            Internal = false,
                            JobDescription = "Rerum consequuntur blanditiis quibusdam repudiandae. Nisi culpa dicta ratione ut voluptate. Quasi maxime ad possimus voluptas nesciunt sunt voluptatum aliquam et. Amet explicabo ex corrupti odio aut mollitia.",
                            JobLocation = "accusamus",
                            JobTitle = "Tempore blanditiis accusamus et exercitationem.",
                            KeyResponsibilities = "Dolorum enim excepturi qui ipsum enim vel laudantium quia at. Sunt possimus omnis eligendi sed. Laborum illum dolores at eos veniam omnis libero voluptatem nobis. Nostrum ea sint doloremque aliquam expedita. Voluptatibus voluptate vitae perferendis repellendus reiciendis voluptatem ut tenetur. Omnis et sed reiciendis.",
                            MinRequirements = "Et deleniti assumenda inventore atque doloribus sapiente dolor voluptatem et. Quia assumenda laboriosam sit quo aut et impedit autem voluptas. Aperiam nesciunt fugiat accusamus sit ipsam saepe. Ratione quam eaque blanditiis rerum omnis atque animi.",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 11, 27, 8, 2, 41, 758, DateTimeKind.Local).AddTicks(7442),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 65,
                            ApplicationInstructions = "Similique blanditiis labore et earum ut. Fugit rerum voluptate natus ut id libero atque magni repellendus. Omnis magni reiciendis velit quisquam ad. Iste veniam commodi ea. Animi rem omnis quam perspiciatis esse.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 8, 13, 22, 51, 18, 911, DateTimeKind.Local).AddTicks(5087),
                            ContactEmail = "Bonnie62@hotmail.com",
                            ContactNumber = "688.911.3692 x210",
                            ContactPerson = "Bonnie Feil",
                            DepartmentId = 20,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 1, 23, 20, 46, 5, 853, DateTimeKind.Local).AddTicks(1210),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 63.71739099906636,
                            Internal = false,
                            JobDescription = "Qui natus totam molestias qui aperiam ratione. Iste praesentium aut voluptas. Quia omnis iusto qui consequatur.",
                            JobLocation = "id",
                            JobTitle = "Tenetur in possimus deleniti aut sunt. Sit consequuntur quasi repellat. Maiores asperiores distinctio rem rem.",
                            KeyResponsibilities = "Aut alias dolorem quaerat. Amet molestiae sint laboriosam ut quia soluta. Laudantium aut est saepe. Magnam tempora inventore sit quis suscipit aperiam assumenda aut. Natus est reiciendis eveniet.",
                            MinRequirements = "Beatae vel consequuntur ipsam dolorem exercitationem vel ipsum at. Hic iure eum et. Eum assumenda quisquam eius praesentium quasi a harum quos tempora.",
                            PartTimeHours = "2 - 4",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 6, 11, 0, 25, 43, 588, DateTimeKind.Local).AddTicks(4491),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 66,
                            ApplicationInstructions = "Cumque quasi officiis itaque porro rerum odio autem debitis. Illum quia velit reiciendis qui. Minima non molestias blanditiis sequi.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2024, 1, 1, 0, 54, 27, 165, DateTimeKind.Local).AddTicks(3082),
                            ContactEmail = "Ann_Braun77@yahoo.com",
                            ContactNumber = "573.408.1263",
                            ContactPerson = "Ann Braun",
                            DepartmentId = 14,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 5, 10, 8, 12, 43, 440, DateTimeKind.Local).AddTicks(1489),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 94.867638961816041,
                            Internal = true,
                            JobDescription = "Qui corrupti et quisquam non voluptatem praesentium inventore. Saepe molestiae voluptates aut sint provident reprehenderit eligendi. Ipsum qui voluptates maxime laborum consectetur.",
                            JobLocation = "veritatis",
                            JobTitle = "Ipsam voluptatibus repellendus soluta in iusto ratione. Est dolorem molestias rerum esse numquam. Tempora voluptatibus et. Voluptate maxime eos vel perferendis voluptatibus. Est voluptatibus officiis debitis expedita rerum numquam vero quod porro. Placeat sit cum.",
                            KeyResponsibilities = "Quod non recusandae. Qui optio et iure quia asperiores excepturi. Vero dolor dolorem est optio mollitia quo. Culpa est molestias natus. Iste voluptatum in sed ut minus. Quidem nam qui veniam beatae blanditiis magnam accusantium ex.",
                            MinRequirements = "Nam iusto nobis alias error unde suscipit ab. Delectus est et ut voluptatem quis aut ipsum. Tempora enim aut voluptatem. Necessitatibus consectetur dolor rerum eligendi et nisi nobis.",
                            PartTimeHours = "< 2",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 8, 17, 22, 6, 2, 53, DateTimeKind.Local).AddTicks(4664),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 67,
                            ApplicationInstructions = "Error dicta praesentium asperiores totam dolores facere est et. Eum itaque temporibus et. Et et consequuntur.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2024, 1, 23, 3, 50, 35, 466, DateTimeKind.Local).AddTicks(9655),
                            ContactEmail = "Leigh_Crooks49@hotmail.com",
                            ContactNumber = "1-927-419-8595 x164",
                            ContactPerson = "Leigh Crooks",
                            DepartmentId = 9,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 2, 12, 11, 42, 51, 883, DateTimeKind.Local).AddTicks(3867),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 210.45477381462919,
                            Internal = true,
                            JobDescription = "Occaecati qui minus. Esse accusamus sit amet ex velit distinctio suscipit quidem. Repellendus sed provident saepe autem. Et nesciunt quas enim culpa aut.",
                            JobLocation = "a",
                            JobTitle = "Blanditiis deleniti voluptatem aut labore aut.\nDolorum culpa animi enim similique.",
                            KeyResponsibilities = "Voluptatum quos corporis cupiditate facilis molestias. Doloremque suscipit perferendis. Commodi hic nihil aliquam. Voluptates corrupti ipsa accusamus a sit.",
                            MinRequirements = "Voluptatem tempore sit voluptates enim adipisci architecto. Temporibus aut fugiat dicta impedit. Ab harum ea molestiae qui dolores.",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 2, 18, 9, 35, 45, 343, DateTimeKind.Local).AddTicks(2564),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 68,
                            ApplicationInstructions = "Minima laudantium quae. Possimus omnis aliquid aut consequatur qui. Vero culpa voluptas. Et nisi et exercitationem vero. Nemo totam veniam non aut similique fuga tempora.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2024, 2, 23, 9, 48, 13, 119, DateTimeKind.Local).AddTicks(9216),
                            ContactEmail = "Bill_Huel@gmail.com",
                            ContactNumber = "598-467-9390",
                            ContactPerson = "Bill Huel",
                            DepartmentId = 19,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 2, 4, 7, 35, 34, 411, DateTimeKind.Local).AddTicks(8889),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 311.57566402646512,
                            Internal = false,
                            JobDescription = "Consequatur et ipsa. Possimus exercitationem vel. Expedita eaque aut dolorum sit modi qui iste. Ipsum ipsum voluptas non laboriosam fugiat nostrum.",
                            JobLocation = "aut",
                            JobTitle = "Tenetur voluptatibus qui officiis saepe optio libero ea sed. Provident laborum provident recusandae rerum qui impedit est veniam. Dolores dolore ab. Inventore ratione adipisci accusantium nam placeat. Omnis provident tenetur. Tempore nemo dolores qui corrupti omnis aperiam voluptatem nihil.",
                            KeyResponsibilities = "Quibusdam repellat cumque perferendis qui veniam quo. Est impedit recusandae ad illum maxime quas facilis. Temporibus omnis assumenda beatae in dolorem delectus excepturi. Sapiente quibusdam molestias aspernatur tempora nisi vel. Aliquid velit quia et dolorem assumenda.",
                            MinRequirements = "Incidunt veritatis quod doloremque voluptatem voluptatibus maiores voluptates laboriosam. Rerum accusamus atque eius. Id et aut quia repudiandae consectetur et deleniti deserunt.",
                            PartTimeHours = "< 2",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 11, 2, 11, 45, 2, 375, DateTimeKind.Local).AddTicks(50),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 69,
                            ApplicationInstructions = "Praesentium eum odio. Dolor voluptatem quidem vitae dolores ea aspernatur doloremque ab. Sunt tenetur quae cumque sit quod eos ea.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2023, 11, 23, 23, 35, 52, 955, DateTimeKind.Local).AddTicks(6148),
                            ContactEmail = "Jenna.Mayert37@hotmail.com",
                            ContactNumber = "407.649.5379",
                            ContactPerson = "Jenna Mayert",
                            DepartmentId = 28,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 10, 6, 17, 28, 57, 819, DateTimeKind.Local).AddTicks(4933),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 376.2992938404434,
                            Internal = true,
                            JobDescription = "Iste et quia sed et aut. Sapiente ut culpa esse odit facere. Occaecati repellat corporis est omnis veritatis ducimus natus.",
                            JobLocation = "iste",
                            JobTitle = "et",
                            KeyResponsibilities = "Iste illo reprehenderit ratione illo ut doloremque labore voluptatem. Iusto et doloremque et. Inventore totam ipsam maiores.",
                            MinRequirements = "Dolor suscipit odio numquam facilis. Delectus asperiores architecto. Assumenda corporis incidunt.",
                            PartTimeHours = "< 2",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 8, 5, 8, 27, 5, 465, DateTimeKind.Local).AddTicks(2688),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 70,
                            ApplicationInstructions = "Porro sunt et vel impedit dolores. Voluptate facere sunt quidem. Ut fugit qui quae vero. Alias in vel officia molestias distinctio quis.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2024, 4, 5, 18, 6, 3, 834, DateTimeKind.Local).AddTicks(9961),
                            ContactEmail = "Troy.Botsford17@yahoo.com",
                            ContactNumber = "1-549-880-6214",
                            ContactPerson = "Troy Botsford",
                            DepartmentId = 34,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 7, 26, 4, 39, 4, 222, DateTimeKind.Local).AddTicks(9707),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 264.05017506985473,
                            Internal = false,
                            JobDescription = "Qui culpa rem molestiae facilis asperiores et delectus asperiores rerum. Autem blanditiis corrupti magnam. Sed sit vero cum illum et. Neque non placeat. Rerum consequuntur et culpa aut eos excepturi dolores eum minima.",
                            JobLocation = "neque",
                            JobTitle = "Ratione ea aut. Minus perspiciatis repudiandae error aspernatur corporis voluptatum. Saepe dolorem non unde nemo in eveniet. Veniam voluptas molestiae.",
                            KeyResponsibilities = "Expedita rerum doloribus quam. Ipsa consectetur molestias harum. Qui molestiae unde autem quia sit beatae accusantium. Odit dolores dolore ut similique minima ut voluptas explicabo.",
                            MinRequirements = "Nemo voluptatum quod autem beatae animi et qui necessitatibus. Quis alias voluptatem dolores provident. Omnis est eligendi quae sed vel dolorem. Quod velit animi quam eos.",
                            PartTimeHours = "6 - 8",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 6, 28, 2, 3, 37, 49, DateTimeKind.Local).AddTicks(8996),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 71,
                            ApplicationInstructions = "Excepturi fuga quo qui quisquam molestiae. Fuga voluptatem voluptatem veniam. Qui rerum ipsa iure labore. Fugit cupiditate dolorum accusamus quas. Explicabo voluptatem repellat minus ab nulla deleniti ex laboriosam. Nesciunt illum provident voluptas.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2024, 2, 8, 10, 50, 53, 702, DateTimeKind.Local).AddTicks(1561),
                            ContactEmail = "Lorene82@gmail.com",
                            ContactNumber = "(246) 462-0353 x48707",
                            ContactPerson = "Lorene Harris",
                            DepartmentId = 8,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 2, 12, 8, 35, 47, 370, DateTimeKind.Local).AddTicks(5830),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 202.83877644820083,
                            Internal = true,
                            JobDescription = "Quaerat in at quis cumque aut quae ut expedita ratione. Aliquid deleniti voluptate accusamus rerum quia et corrupti blanditiis. Corrupti in esse quo non tenetur.",
                            JobLocation = "quidem",
                            JobTitle = "At qui tempora nesciunt.",
                            KeyResponsibilities = "Perferendis magni sunt dicta. Doloremque architecto ut ipsa. Debitis non ipsam sint. Laborum ex sunt provident assumenda dolorem iusto provident.",
                            MinRequirements = "Velit corrupti et. Voluptate consequuntur quia qui est. Doloribus fugiat ea labore in velit tempore autem. Ab accusantium quia ut provident et ipsa expedita. Dolores qui in mollitia ipsam aperiam aut perspiciatis. Laborum harum repellat iste repellendus nam necessitatibus nihil.",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 6, 18, 16, 30, 39, 649, DateTimeKind.Local).AddTicks(32),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 72,
                            ApplicationInstructions = "Aut provident et recusandae consequatur porro eum. Dolores deleniti amet. Aut et et excepturi numquam excepturi molestiae eius.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 8, 28, 20, 31, 34, 150, DateTimeKind.Local).AddTicks(9938),
                            ContactEmail = "Gail.Keeling@hotmail.com",
                            ContactNumber = "1-625-778-7598 x00951",
                            ContactPerson = "Gail Keeling",
                            DepartmentId = 30,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 10, 14, 6, 24, 47, 707, DateTimeKind.Local).AddTicks(6972),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 346.10103601408241,
                            Internal = false,
                            JobDescription = "Sed libero ea eius. Officia tempore maiores doloribus autem. Harum in corporis optio quia numquam dolor dignissimos. Mollitia fugiat sint deserunt nobis amet adipisci. Commodi voluptas quisquam voluptatibus hic eos sit.",
                            JobLocation = "hic",
                            JobTitle = "Et aliquid molestias quos consequatur reiciendis.\nNulla itaque illum necessitatibus exercitationem dolore.",
                            KeyResponsibilities = "Omnis quis placeat assumenda provident aut qui aut dolorum tempora. Cum soluta sed aut placeat facere et facere. Non dicta laboriosam aut. Numquam nisi aliquam maxime rem totam rem. Sapiente nemo a velit. Et voluptas nulla et rerum ut sequi corporis repellendus.",
                            MinRequirements = "Quasi eos incidunt dolores sunt dolor totam doloremque rerum nesciunt. Possimus qui consequatur voluptatem possimus. Totam quisquam incidunt perferendis. Tenetur qui nihil ex ut velit architecto.",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 12, 6, 12, 25, 2, 880, DateTimeKind.Local).AddTicks(5067),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 73,
                            ApplicationInstructions = "Cupiditate nobis et. Officiis et modi error porro consequatur reprehenderit. Autem cupiditate voluptas sint ut nam et corporis. Ipsum qui fugit aut occaecati quod. Et voluptates sed. Eius rem voluptas enim voluptatum et ad.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2024, 6, 30, 19, 53, 8, 44, DateTimeKind.Local).AddTicks(8492),
                            ContactEmail = "Marlon.Mohr@gmail.com",
                            ContactNumber = "701.521.6815 x95224",
                            ContactPerson = "Marlon Mohr",
                            DepartmentId = 34,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 6, 8, 7, 35, 20, 124, DateTimeKind.Local).AddTicks(5695),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 316.18810345706908,
                            Internal = true,
                            JobDescription = "Eos et omnis culpa quia esse necessitatibus beatae. Rerum voluptatem et laudantium mollitia. Et placeat nihil aliquid rerum. Omnis consequatur ad illum. Et soluta dolores eaque molestiae iure. Dolorum perspiciatis sint inventore.",
                            JobLocation = "sed",
                            JobTitle = "Molestiae laudantium ut enim expedita possimus officiis atque ea. Adipisci molestiae earum totam aspernatur voluptas corrupti omnis. Molestias quia qui ullam porro debitis soluta nulla.",
                            KeyResponsibilities = "Consequatur numquam corrupti et aperiam quis ullam perspiciatis alias. Quisquam doloremque velit sunt. Minus praesentium ullam voluptatem ducimus.",
                            MinRequirements = "Est labore mollitia facilis laboriosam dolorem omnis. Aut repudiandae qui est mollitia excepturi. Soluta et dolor quibusdam ullam atque animi reiciendis. Aut dolores maiores maiores esse eum. Id neque labore odio dolore est reprehenderit rerum.",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 4, 29, 12, 49, 0, 681, DateTimeKind.Local).AddTicks(8375),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 74,
                            ApplicationInstructions = "Laboriosam animi et aliquam cumque quia consequatur. Quas omnis magni quo aut et. Qui enim reprehenderit eos blanditiis reprehenderit saepe aut voluptatibus. Porro itaque quas saepe cum in aliquam tenetur illum nostrum. Vitae quod commodi non repudiandae sunt labore sed est ut. Ut earum quas qui.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2024, 5, 10, 15, 57, 44, 830, DateTimeKind.Local).AddTicks(196),
                            ContactEmail = "Sara_Rau@yahoo.com",
                            ContactNumber = "1-243-955-5958",
                            ContactPerson = "Sara Rau",
                            DepartmentId = 12,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 9, 8, 18, 3, 44, 449, DateTimeKind.Local).AddTicks(8113),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 347.10638089902062,
                            Internal = true,
                            JobDescription = "Ut numquam ducimus quos occaecati minima voluptatibus enim nemo culpa. Sit debitis omnis veritatis tenetur dolorem quas non accusantium. Perspiciatis ullam et doloribus autem impedit non ut natus iure. Temporibus ut velit. Nulla quas error laudantium eum distinctio est. Velit itaque qui molestias quia perferendis sed.",
                            JobLocation = "alias",
                            JobTitle = "possimus",
                            KeyResponsibilities = "Repudiandae autem et ratione similique qui corporis maxime consectetur id. Laborum ut praesentium odit quia earum. Facilis enim recusandae.",
                            MinRequirements = "Illo facilis sed voluptate. Dignissimos iure eaque aperiam non esse est illo alias esse. Non ex eos voluptatem tempore perspiciatis sed nesciunt nam et. Veritatis asperiores fugit repellendus et consequuntur unde ducimus et. Quae aliquid corporis aut optio. In recusandae assumenda illo voluptatem.",
                            PartTimeHours = "2 - 4",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 8, 28, 11, 25, 28, 1, DateTimeKind.Local).AddTicks(8248),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 75,
                            ApplicationInstructions = "Et non dolorum itaque quia. Nihil voluptates eaque quia maxime quod rerum. Corporis impedit molestiae amet error delectus corrupti impedit. Est dolorem molestias blanditiis aut deleniti. Iusto repudiandae nihil tempora corporis voluptatem ratione tempore.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2024, 1, 13, 6, 17, 44, 459, DateTimeKind.Local).AddTicks(2758),
                            ContactEmail = "Hazel21@yahoo.com",
                            ContactNumber = "1-823-322-7098 x2742",
                            ContactPerson = "Hazel Hermiston",
                            DepartmentId = 4,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 9, 23, 12, 15, 32, 348, DateTimeKind.Local).AddTicks(5557),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 205.9060827856446,
                            Internal = false,
                            JobDescription = "Sed animi repudiandae enim culpa. Quia neque saepe. Et doloremque sapiente officia accusamus velit. Aut assumenda cumque quia.",
                            JobLocation = "mollitia",
                            JobTitle = "Rerum eum voluptatem esse eum.",
                            KeyResponsibilities = "Aliquam facere nemo omnis rerum autem aut. Aut sit nostrum. Aut dolorem ea tenetur. Ea odit debitis dolores ut minus magni est dolorem.",
                            MinRequirements = "Facere maxime omnis omnis laborum et. Minima et dolorem voluptatibus ea aperiam voluptatibus. Consequatur eum vel quam cupiditate deleniti officiis atque. Minima in nihil. Sit dolor sequi quisquam tempora.",
                            PartTimeHours = "6 - 8",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 9, 20, 3, 47, 46, 562, DateTimeKind.Local).AddTicks(690),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 76,
                            ApplicationInstructions = "Nemo repellendus accusantium sint expedita quia eos. Deserunt maxime nostrum doloribus corrupti enim eius. Exercitationem iure nobis ex corrupti quod eos error illo sit. Velit vitae eveniet rem provident blanditiis ut sunt enim. Aut minus quam vel quaerat ut deserunt qui sed.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 12, 12, 13, 38, 52, 500, DateTimeKind.Local).AddTicks(3584),
                            ContactEmail = "Elmer_Olson@gmail.com",
                            ContactNumber = "430-380-8597 x17862",
                            ContactPerson = "Elmer Olson",
                            DepartmentId = 31,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 12, 18, 3, 27, 55, 153, DateTimeKind.Local).AddTicks(46),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 294.7211165887868,
                            Internal = true,
                            JobDescription = "Cumque harum eligendi et. Autem veritatis error facilis laudantium eos rerum vel itaque. Optio enim possimus sed modi eius et.",
                            JobLocation = "aspernatur",
                            JobTitle = "et",
                            KeyResponsibilities = "Incidunt quas unde quod occaecati delectus eligendi. Qui sed voluptate dolor vitae quia. Libero quis et sunt eaque officiis minus. Voluptatem veritatis repellat dolorem repudiandae quibusdam sed.",
                            MinRequirements = "Quos eum eum inventore aspernatur quisquam. Tempore est odio architecto quos. Reiciendis blanditiis perferendis eligendi ut est rerum error modi. Et delectus tempora cum occaecati qui omnis cumque. Cumque asperiores nostrum magnam vel totam sunt et eveniet esse.",
                            PartTimeHours = "> 12",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 7, 11, 5, 22, 58, 824, DateTimeKind.Local).AddTicks(7951),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 77,
                            ApplicationInstructions = "Sed aliquid animi ab facilis quisquam nam sed deserunt. Delectus totam aut ut iusto ut suscipit distinctio sit. Facilis sequi similique et. Rerum ducimus harum nesciunt omnis.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 8, 11, 22, 31, 38, 152, DateTimeKind.Local).AddTicks(9209),
                            ContactEmail = "Bobby26@gmail.com",
                            ContactNumber = "1-409-458-5085 x2108",
                            ContactPerson = "Bobby Blanda",
                            DepartmentId = 23,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 9, 8, 1, 56, 49, 413, DateTimeKind.Local).AddTicks(4880),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 185.10140917967138,
                            Internal = false,
                            JobDescription = "Sequi ut soluta dicta sunt qui et. Qui numquam qui eos non ut provident et tenetur. Sequi sint sint aliquam adipisci quae.",
                            JobLocation = "repellendus",
                            JobTitle = "Alias ad aperiam sapiente eaque expedita quis ipsam.",
                            KeyResponsibilities = "Aliquid ducimus rerum quae voluptatem laudantium molestiae. Molestiae enim aut aut perferendis soluta assumenda. Soluta cum eveniet eaque harum corporis. Omnis laborum officia optio aliquam perspiciatis atque natus. Quibusdam pariatur id earum enim rem mollitia temporibus assumenda rem.",
                            MinRequirements = "Similique saepe quaerat. Consectetur rerum aut eligendi esse. Hic quae porro aut et minus assumenda ipsum. Rerum facere nesciunt.",
                            PartTimeHours = "< 2",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 1, 6, 15, 23, 9, 355, DateTimeKind.Local).AddTicks(4801),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 78,
                            ApplicationInstructions = "Aliquam tempora libero odit praesentium amet voluptatem voluptas. Animi corrupti quia ut velit temporibus. Dolorem omnis possimus omnis mollitia. Tempora possimus architecto natus est aspernatur.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2024, 3, 18, 13, 48, 47, 994, DateTimeKind.Local).AddTicks(7056),
                            ContactEmail = "Wayne.Olson@hotmail.com",
                            ContactNumber = "854.888.7248 x5240",
                            ContactPerson = "Wayne Olson",
                            DepartmentId = 27,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 7, 30, 7, 42, 30, 734, DateTimeKind.Local).AddTicks(4601),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 184.65726044245866,
                            Internal = true,
                            JobDescription = "Ex ea minus optio. Qui unde neque inventore esse optio voluptas possimus. Sit reprehenderit similique aut perferendis omnis. Nemo rerum quo ratione et alias. Doloremque eveniet ut dolorem possimus nostrum dolore dicta officia enim.",
                            JobLocation = "dolor",
                            JobTitle = "Nam cumque laboriosam at facere quidem maxime sunt nobis.",
                            KeyResponsibilities = "Dicta temporibus omnis quae praesentium eveniet omnis voluptas. Rerum magni nesciunt debitis provident vitae. Ut aspernatur et exercitationem consectetur dolorum. Maxime id id voluptatibus qui tempora quaerat suscipit ut et. Vitae ut non sed fuga eligendi quisquam sit alias. Provident perspiciatis laudantium quia.",
                            MinRequirements = "Excepturi voluptatum aut optio. Laudantium dolorem sit odio at repudiandae. Sed magni corporis repellendus. Perferendis ducimus fugit itaque doloremque. Aut in quia et autem numquam.",
                            PartTimeHours = "6 - 8",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 4, 11, 2, 2, 30, 742, DateTimeKind.Local).AddTicks(632),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 79,
                            ApplicationInstructions = "Magnam illum ipsa culpa et quia. Dignissimos aut laborum aspernatur aut. Id sit laudantium voluptatem facilis. Officia dolorum hic.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2023, 12, 30, 4, 55, 55, 127, DateTimeKind.Local).AddTicks(1595),
                            ContactEmail = "Clifton.Lubowitz81@yahoo.com",
                            ContactNumber = "(502) 358-7598 x49833",
                            ContactPerson = "Clifton Lubowitz",
                            DepartmentId = 20,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 7, 7, 0, 3, 32, 62, DateTimeKind.Local).AddTicks(4582),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 321.23411967010895,
                            Internal = false,
                            JobDescription = "Et quisquam rerum. Et aut est voluptatem dolores aperiam cupiditate debitis. Officia doloremque veritatis iste aliquam voluptatibus praesentium tempore. Consequatur dolor ipsa veritatis accusamus ea quis voluptas consequatur ullam. Voluptatibus porro vitae quia expedita.",
                            JobLocation = "rerum",
                            JobTitle = "molestiae",
                            KeyResponsibilities = "Corporis vitae qui quisquam tempore et illo. Commodi ut explicabo. Accusamus aliquid odit id id aut. Saepe expedita modi modi laborum. Officiis hic id eveniet laborum placeat sed quo vel. Cumque eveniet nisi.",
                            MinRequirements = "Ipsam consequatur ducimus sit dolorem deserunt nulla qui. Illo et eius deserunt. A vitae eos non tenetur quibusdam nam ipsam dolores facere.",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 5, 18, 16, 10, 0, 787, DateTimeKind.Local).AddTicks(3391),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 80,
                            ApplicationInstructions = "Adipisci consequuntur itaque non enim cum. Nostrum est et et sed iure est molestiae repellat. Exercitationem eos magnam perferendis molestias asperiores. Temporibus itaque modi adipisci dolore est. Libero sunt autem.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2024, 4, 15, 8, 51, 0, 261, DateTimeKind.Local).AddTicks(4273),
                            ContactEmail = "Alyssa_Batz0@hotmail.com",
                            ContactNumber = "(701) 434-7213 x265",
                            ContactPerson = "Alyssa Batz",
                            DepartmentId = 17,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 3, 5, 16, 42, 17, 572, DateTimeKind.Local).AddTicks(8383),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 349.72717608312479,
                            Internal = false,
                            JobDescription = "Tempore dolores facere et eligendi ipsa qui. Aut autem repellendus iusto ut quo facere quis rerum. Deleniti est magni ducimus id quis. Tempore ipsa sapiente non sapiente aut. Quibusdam et quia dolore ut molestias iste. Aut non est velit voluptatem repellendus pariatur velit saepe minus.",
                            JobLocation = "accusantium",
                            JobTitle = "Molestiae tempora qui vel.\nSit alias iusto quaerat.\nUt adipisci quidem atque excepturi quas eum magni ut molestias.",
                            KeyResponsibilities = "Voluptas voluptas modi libero dolorem harum et quibusdam recusandae voluptatum. Rerum iusto aspernatur at nesciunt. Sed ut cum hic est. A voluptatem consequatur eveniet. Ut eveniet minus aut culpa quas.",
                            MinRequirements = "Nesciunt et adipisci. Consequatur laudantium maiores temporibus sint. Quae esse est libero autem commodi ut ut aut voluptatem. Ut occaecati praesentium minus.",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 5, 17, 21, 39, 33, 251, DateTimeKind.Local).AddTicks(4013),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 81,
                            ApplicationInstructions = "Mollitia numquam quia omnis aut. Ratione ut voluptas vitae ab temporibus ab. Laborum deserunt eum omnis ut consequatur cum labore. Porro incidunt tenetur iste aspernatur velit reiciendis. Natus est non harum voluptatem recusandae deleniti ab odit temporibus. Aut corporis ut.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2024, 6, 7, 2, 48, 17, 451, DateTimeKind.Local).AddTicks(1953),
                            ContactEmail = "Sherri37@yahoo.com",
                            ContactNumber = "(686) 938-0836 x317",
                            ContactPerson = "Sherri Erdman",
                            DepartmentId = 30,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 2, 16, 4, 10, 38, 280, DateTimeKind.Local).AddTicks(8051),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 214.67665900228388,
                            Internal = false,
                            JobDescription = "Dignissimos et perferendis culpa vero voluptatem facere et ex. Corrupti perspiciatis non alias ab recusandae ut odit. Aspernatur cupiditate aperiam praesentium distinctio ut. Quibusdam eius et ea magnam quis ut aspernatur. Vero in in.",
                            JobLocation = "quia",
                            JobTitle = "Ad corrupti ducimus recusandae quia aut quod sunt provident adipisci.\nOfficia sit velit dolor ex cum qui tempora provident.\nRepellat velit fugit consequatur eum necessitatibus adipisci sed hic voluptatibus.\nNeque fuga possimus aut non ut officia optio voluptatum natus.\nIllo sint tenetur voluptas nihil architecto ipsa quisquam reiciendis.\nEa et minima architecto sit.",
                            KeyResponsibilities = "Non unde iste qui numquam. Molestiae impedit et consequatur qui impedit omnis provident inventore esse. Ea animi illo et. Sed quos incidunt consequatur. Possimus cumque deleniti eveniet aut ipsa ullam atque. Alias et voluptas laborum cupiditate illo illo voluptatem eveniet aut.",
                            MinRequirements = "Ut quas aut quo qui officiis modi accusantium molestiae. Ex quia ut. Consequatur ipsum voluptates voluptatem libero aliquam quae consequuntur. Non occaecati doloribus non aut dolores.",
                            PartTimeHours = "< 2",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 7, 19, 6, 54, 18, 689, DateTimeKind.Local).AddTicks(8241),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 82,
                            ApplicationInstructions = "Non quo asperiores voluptatem deserunt et eos. Aspernatur cum magnam quidem et. Aliquam numquam nostrum et nihil est id.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 9, 30, 21, 38, 49, 440, DateTimeKind.Local).AddTicks(8844),
                            ContactEmail = "Billie91@yahoo.com",
                            ContactNumber = "737.596.7082",
                            ContactPerson = "Billie Steuber",
                            DepartmentId = 7,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 2, 10, 11, 0, 18, 709, DateTimeKind.Local).AddTicks(8203),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 234.16279132206122,
                            Internal = false,
                            JobDescription = "Ipsam sit optio alias nostrum rerum impedit quasi. Quia aut molestiae ipsa quam ut animi corrupti. Soluta enim eos. Recusandae et a dolores temporibus rerum sed. Rem rerum eum voluptatem cum magni saepe.",
                            JobLocation = "laborum",
                            JobTitle = "Est cupiditate laudantium sit dicta numquam. Quia laudantium numquam natus illo reprehenderit perspiciatis cumque dicta. Quae autem explicabo et provident consectetur nihil asperiores animi. Quod quo nihil officiis sed quaerat sint provident sunt rem.",
                            KeyResponsibilities = "Minima doloribus voluptatem quasi quia repudiandae fugiat odio id. Quae veritatis similique illo voluptas voluptas architecto suscipit omnis consectetur. Quia inventore atque omnis laboriosam ex. Rem perferendis est et voluptatem quia excepturi aut placeat. Et autem neque neque veniam omnis.",
                            MinRequirements = "Nemo ratione non deserunt praesentium facere quo quos. A recusandae fugiat enim voluptatibus iste. Delectus deserunt quis. Repudiandae reprehenderit perspiciatis tempora culpa laborum. Delectus doloremque voluptas eaque exercitationem eligendi. Doloremque quia et.",
                            PartTimeHours = "> 12",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 7, 29, 8, 45, 58, 846, DateTimeKind.Local).AddTicks(3114),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 83,
                            ApplicationInstructions = "Debitis fugiat rem ipsam et est nisi iure. Aut natus molestiae sunt id consequatur quibusdam fugiat. Perferendis non sit rerum consequatur veritatis accusamus ut.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2024, 6, 17, 6, 22, 18, 311, DateTimeKind.Local).AddTicks(2229),
                            ContactEmail = "Darrell31@hotmail.com",
                            ContactNumber = "380-260-2507",
                            ContactPerson = "Darrell Mueller",
                            DepartmentId = 34,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 5, 25, 5, 21, 34, 118, DateTimeKind.Local).AddTicks(7562),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 128.2135542846348,
                            Internal = false,
                            JobDescription = "Dolores expedita nulla tenetur sit eligendi accusantium et et aut. Excepturi non voluptatem accusamus voluptatem harum aut et temporibus sapiente. Explicabo qui recusandae ut. Recusandae laudantium voluptate dignissimos ut. Qui saepe quae.",
                            JobLocation = "dolorem",
                            JobTitle = "Quo enim debitis doloremque omnis quas nobis aut architecto eius.\nVeritatis veniam maxime non sit natus.\nSit sed consequatur explicabo aperiam excepturi ea porro.\nBeatae molestiae dolorem maiores doloremque eveniet.\nArchitecto et veniam et.\nEt numquam enim vero dolore reiciendis.",
                            KeyResponsibilities = "Quis occaecati natus atque laudantium qui temporibus molestias dolorum ad. Tempore ipsa odit est qui. Ut in dolorem explicabo. Minima quae quos quia officia ut inventore ut.",
                            MinRequirements = "Aut qui accusantium iste et laboriosam occaecati. Odit cum blanditiis autem sint reprehenderit. Quia est qui laborum perferendis. Eius necessitatibus nihil et sint asperiores qui. Necessitatibus qui eum quos fugiat cumque ipsam vitae ab quisquam. Quo tenetur veritatis esse non ut magni aut voluptatibus ut.",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 7, 30, 15, 34, 29, 563, DateTimeKind.Local).AddTicks(5175),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 84,
                            ApplicationInstructions = "Placeat omnis voluptatum qui. Ratione ut sed ipsam veniam ut voluptas nisi. Velit nihil at aut voluptas dolore.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 10, 26, 21, 38, 31, 194, DateTimeKind.Local).AddTicks(6287),
                            ContactEmail = "Arnold_Swaniawski84@hotmail.com",
                            ContactNumber = "859.990.7835 x5867",
                            ContactPerson = "Arnold Swaniawski",
                            DepartmentId = 4,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 8, 11, 4, 41, 2, 593, DateTimeKind.Local).AddTicks(8459),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 370.1134150242961,
                            Internal = true,
                            JobDescription = "Odit non voluptas voluptate aspernatur. Dolor eius sunt. Pariatur fugiat distinctio voluptate unde sint nobis est et. Veniam dicta atque est. Voluptatibus accusantium sit est exercitationem totam sint.",
                            JobLocation = "tempore",
                            JobTitle = "Perspiciatis inventore tempora quae eos laboriosam.",
                            KeyResponsibilities = "Sint voluptatum excepturi illum. Sequi recusandae sed quasi placeat quia inventore voluptatem ducimus. Temporibus sed vitae.",
                            MinRequirements = "Quibusdam commodi non neque quaerat delectus. Eos praesentium est. Debitis amet saepe delectus ipsum aut dolorem ut. Quo dolor in ipsum ut ut quam explicabo earum. Non dolor sunt et qui sequi. Aliquid iste dolorem voluptatem quasi distinctio nisi.",
                            PartTimeHours = "2 - 4",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 11, 19, 7, 53, 9, 964, DateTimeKind.Local).AddTicks(355),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 85,
                            ApplicationInstructions = "Et quos est fuga quo modi sapiente dolores rem et. Excepturi aut facere eos libero itaque libero quo harum et. Sed soluta minima vitae dolorum quia. Rerum eius quis. Sit sint nulla ut ab corrupti optio eum. Quo tempora numquam qui eveniet.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2023, 10, 10, 17, 4, 28, 577, DateTimeKind.Local).AddTicks(9498),
                            ContactEmail = "Carrie.Mante@gmail.com",
                            ContactNumber = "458.861.8656 x0222",
                            ContactPerson = "Carrie Mante",
                            DepartmentId = 32,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 6, 9, 21, 42, 34, 994, DateTimeKind.Local).AddTicks(9930),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 339.11104371729817,
                            Internal = true,
                            JobDescription = "Culpa ex voluptatem molestiae consectetur. Qui nostrum quae nisi facere id. Odit non qui excepturi temporibus voluptatum labore nostrum assumenda.",
                            JobLocation = "necessitatibus",
                            JobTitle = "eos",
                            KeyResponsibilities = "Est aut laudantium rerum. Praesentium voluptates dignissimos officia. Earum provident et quis iste at impedit id explicabo harum.",
                            MinRequirements = "Eum cumque id quam. Aut vel totam vitae quis earum eius quis ipsam culpa. Error qui nulla distinctio itaque odio.",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 3, 19, 10, 52, 53, 934, DateTimeKind.Local).AddTicks(7944),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 86,
                            ApplicationInstructions = "Corrupti et minus fugiat tempora velit quaerat deleniti numquam architecto. Architecto autem aliquid nulla et et. Numquam soluta ut amet omnis voluptatem ex vel ratione. Qui qui voluptate consectetur et rerum fugit. Ullam voluptatibus laboriosam quas voluptate. Et nihil sit vero necessitatibus maxime.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2024, 2, 20, 22, 6, 19, 411, DateTimeKind.Local).AddTicks(8040),
                            ContactEmail = "Velma.Herzog46@hotmail.com",
                            ContactNumber = "342.801.4456",
                            ContactPerson = "Velma Herzog",
                            DepartmentId = 1,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 4, 8, 16, 9, 6, 762, DateTimeKind.Local).AddTicks(3245),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 306.23349177475717,
                            Internal = false,
                            JobDescription = "Ut earum velit magnam earum corporis at rem deleniti pariatur. Possimus placeat omnis libero ut. Quos labore non sed qui deleniti impedit enim similique. Ex beatae et corrupti in occaecati maxime. Totam omnis asperiores earum consequatur laudantium eum. Corrupti labore et et necessitatibus possimus sint.",
                            JobLocation = "accusantium",
                            JobTitle = "Blanditiis omnis qui praesentium nihil reiciendis quis.",
                            KeyResponsibilities = "Reprehenderit reiciendis commodi et ut consequatur. Velit quos quo unde. Veritatis autem rerum doloribus rem dolorum. Rerum animi neque rem sunt saepe et ut aspernatur consequatur. Perferendis similique eaque. Iusto cupiditate consequuntur autem esse est soluta iste nihil amet.",
                            MinRequirements = "Reprehenderit ea quas. Incidunt ea blanditiis magni eveniet tempora. Ad ut ipsum eaque aut adipisci quam. Reiciendis iure explicabo itaque nihil et explicabo quia ut. Ipsa id quis labore vel cum error mollitia provident voluptas. Fugit voluptates quasi quia sit at ea dolore.",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 3, 5, 13, 49, 47, 436, DateTimeKind.Local).AddTicks(6697),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 87,
                            ApplicationInstructions = "Ipsum possimus ullam nam ipsa fugit quis alias id. Tempore itaque id vel perferendis est consectetur dignissimos quia occaecati. Maiores nemo minus commodi ut. Consequatur quo voluptas. Nemo qui a ipsa sapiente.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 9, 14, 6, 41, 39, 114, DateTimeKind.Local).AddTicks(9729),
                            ContactEmail = "Raquel17@yahoo.com",
                            ContactNumber = "809-625-3809 x169",
                            ContactPerson = "Raquel Jast",
                            DepartmentId = 30,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 12, 17, 7, 30, 26, 658, DateTimeKind.Local).AddTicks(8616),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 278.98628969163929,
                            Internal = true,
                            JobDescription = "Sed quidem assumenda illo. Unde occaecati quasi deleniti praesentium porro et ea consequatur maiores. Qui sit ducimus. Corporis eos aut alias dolorem voluptate et.",
                            JobLocation = "commodi",
                            JobTitle = "Ab aut eaque labore sunt placeat ad accusantium omnis.\nExercitationem nihil facilis est.\nEt et quia iure quas eos sint non pariatur.\nFuga assumenda necessitatibus.\nSint sequi non optio eligendi libero a.",
                            KeyResponsibilities = "Esse quaerat quia sequi nobis aliquid aut porro commodi. Qui atque eum ipsa sequi. Voluptates sed dolor amet dolor. Voluptatibus eum voluptatum nulla inventore voluptas est tenetur voluptatibus vel.",
                            MinRequirements = "Et consequuntur voluptas nihil eum in. Nisi voluptatem esse quos et provident fugit autem nihil. Magni omnis dolor officia totam minima autem soluta voluptas. Et asperiores voluptate consequatur qui. Voluptates dolores doloremque rerum quia impedit animi ut fugiat nobis.",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 11, 29, 15, 7, 8, 554, DateTimeKind.Local).AddTicks(3001),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 88,
                            ApplicationInstructions = "Expedita et non ea qui animi veniam dolorem. Qui cumque at. Minima hic consectetur. Repellat voluptas iure aut officiis rerum sunt eligendi consequatur saepe. Ipsa est molestiae. Reprehenderit consequatur dolorem numquam doloribus.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 12, 18, 19, 14, 12, 968, DateTimeKind.Local).AddTicks(9362),
                            ContactEmail = "Elisa52@hotmail.com",
                            ContactNumber = "971.231.6744 x252",
                            ContactPerson = "Elisa Hansen",
                            DepartmentId = 2,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 4, 5, 20, 18, 56, 806, DateTimeKind.Local).AddTicks(8537),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 318.06872636921179,
                            Internal = false,
                            JobDescription = "Dicta soluta aut placeat velit qui consequatur laudantium. Cumque rerum quo facere laborum ut earum dolor aut. Libero culpa impedit labore quia exercitationem. Et laudantium architecto qui id velit exercitationem ipsam possimus nihil. Consequuntur odio commodi nobis ut ipsa laboriosam explicabo inventore cum.",
                            JobLocation = "expedita",
                            JobTitle = "Et omnis a. Vel dignissimos possimus. Ut exercitationem perspiciatis reprehenderit in delectus.",
                            KeyResponsibilities = "Odio at fugiat sit et provident. Voluptatibus ipsa nam. Accusantium labore nostrum est est aut voluptate dolores est laboriosam. Autem voluptatem neque tempore. Et qui voluptatem facilis.",
                            MinRequirements = "Rerum labore et sit ab. Impedit voluptatum reiciendis veritatis porro perspiciatis. Numquam rerum occaecati recusandae vel doloribus rem aut. Incidunt voluptatum similique.",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 11, 15, 21, 19, 27, 46, DateTimeKind.Local).AddTicks(7098),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 89,
                            ApplicationInstructions = "Nihil eum nulla quis repellat et ut nobis numquam ipsam. Molestiae molestias animi est necessitatibus ipsam aut quas quae. Reprehenderit laborum culpa pariatur ut. Expedita commodi minima incidunt. Odit pariatur ratione eaque cum eligendi. Voluptas omnis cum velit quia adipisci.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 9, 26, 7, 41, 22, 392, DateTimeKind.Local).AddTicks(5120),
                            ContactEmail = "Alfredo72@yahoo.com",
                            ContactNumber = "(930) 600-6752 x604",
                            ContactPerson = "Alfredo Kautzer",
                            DepartmentId = 4,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 3, 17, 11, 46, 30, 595, DateTimeKind.Local).AddTicks(7018),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 298.56472900070469,
                            Internal = true,
                            JobDescription = "Ut doloribus porro sunt. Quisquam molestiae harum enim assumenda voluptatem cupiditate aspernatur. Eligendi voluptatem recusandae vitae ut illum distinctio qui.",
                            JobLocation = "id",
                            JobTitle = "fuga",
                            KeyResponsibilities = "Enim expedita reiciendis quos eum qui omnis distinctio. Est consectetur perspiciatis assumenda dolor eius fugiat ut. Ipsum commodi aut dicta ea deleniti. Nulla corporis deleniti. Aliquam quas totam.",
                            MinRequirements = "Expedita reiciendis suscipit minima aut autem suscipit consequatur doloremque tempore. Sed culpa quidem odio dolorum rem et qui. Quidem amet exercitationem dolores.",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 2, 7, 4, 8, 19, 586, DateTimeKind.Local).AddTicks(4026),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 90,
                            ApplicationInstructions = "Consectetur aut reiciendis nam. Nesciunt porro consequatur rem iste quo. Corporis iusto itaque aut consequatur. Quasi beatae aut quasi est. Sit asperiores sunt enim eligendi ex inventore quidem totam.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2024, 1, 27, 14, 21, 51, 64, DateTimeKind.Local).AddTicks(3453),
                            ContactEmail = "Beverly44@yahoo.com",
                            ContactNumber = "(882) 754-5986 x02108",
                            ContactPerson = "Beverly Medhurst",
                            DepartmentId = 7,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 7, 25, 2, 25, 11, 701, DateTimeKind.Local).AddTicks(4182),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 204.81719214227851,
                            Internal = true,
                            JobDescription = "Veritatis ipsum debitis. Qui quae culpa quibusdam sed voluptate possimus quia. Est quidem et. Dolores in veniam quia ea quia sit dignissimos.",
                            JobLocation = "quasi",
                            JobTitle = "Fugit dolores sed debitis voluptatibus ea officiis harum.",
                            KeyResponsibilities = "Et aperiam ullam enim ea in in libero. Ut inventore qui. Qui necessitatibus eaque a distinctio. Perspiciatis magnam eum rerum voluptates soluta impedit sed debitis laboriosam. Eveniet alias eligendi quasi debitis ut voluptatibus pariatur. Omnis possimus est maiores accusamus laborum iure voluptatem veritatis doloribus.",
                            MinRequirements = "Numquam quidem iure reprehenderit incidunt qui. Officia optio adipisci optio voluptas iusto. Inventore aperiam ad voluptatem ut illo odit distinctio. Temporibus deleniti in assumenda. Exercitationem iste qui necessitatibus qui. Soluta consequatur nemo cum.",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 1, 27, 2, 21, 10, 720, DateTimeKind.Local).AddTicks(2262),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 91,
                            ApplicationInstructions = "Ea aliquid laudantium. Error et incidunt eum id voluptatem quo autem. Sapiente rerum adipisci fugit atque occaecati deleniti minima. Quia in nesciunt consequatur quasi excepturi recusandae sit quo. Fugiat odio eos laborum cumque qui nobis vitae dolores iusto. Animi dignissimos reprehenderit facere.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2024, 5, 23, 1, 18, 26, 581, DateTimeKind.Local).AddTicks(5323),
                            ContactEmail = "Andy.Beahan19@yahoo.com",
                            ContactNumber = "932.994.3070 x74589",
                            ContactPerson = "Andy Beahan",
                            DepartmentId = 29,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 5, 18, 7, 12, 41, 49, DateTimeKind.Local).AddTicks(9219),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 71.249294500448414,
                            Internal = false,
                            JobDescription = "Repellat expedita eum ea quas et corrupti. Veritatis unde facere. Quisquam eveniet omnis sit tenetur. Dolore dolorem enim dolores nostrum quibusdam odio ut nulla quod.",
                            JobLocation = "est",
                            JobTitle = "Animi a recusandae. Qui occaecati sit rerum est officia quidem. Recusandae quisquam esse sed in. Corrupti et molestias facilis veniam et. Officia et nesciunt tenetur placeat. Odit dolor eligendi voluptas omnis.",
                            KeyResponsibilities = "Qui et et. Dolor nobis eos voluptatem et quisquam non. Neque enim totam suscipit omnis. Cum et dolorem et mollitia ipsum est eveniet quis provident. Labore a et in omnis nobis. Et ut totam.",
                            MinRequirements = "Nisi quisquam sed tempora facilis officia asperiores rerum. Qui consequatur dicta non vero et. Praesentium sint minima in sit provident fuga voluptas ad. Est fuga velit provident est corrupti beatae autem. Qui qui rerum ipsa enim exercitationem saepe ipsa aspernatur.",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 9, 27, 14, 6, 17, 61, DateTimeKind.Local).AddTicks(7389),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 92,
                            ApplicationInstructions = "Aliquam voluptatem tempore atque. Quod quidem dolor est commodi repudiandae temporibus. Autem quaerat cumque voluptate.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2024, 5, 1, 19, 5, 30, 796, DateTimeKind.Local).AddTicks(448),
                            ContactEmail = "Frances.Effertz15@yahoo.com",
                            ContactNumber = "599.297.6305",
                            ContactPerson = "Frances Effertz",
                            DepartmentId = 4,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 3, 26, 1, 27, 23, 690, DateTimeKind.Local).AddTicks(7646),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 393.75919887971094,
                            Internal = false,
                            JobDescription = "Dicta repellendus id eligendi rem magni facere. Enim ea fuga ea repellendus consequatur molestiae illo quidem et. Enim consequatur culpa sint aspernatur. Expedita aperiam dicta pariatur et et harum commodi voluptatem recusandae.",
                            JobLocation = "ut",
                            JobTitle = "Aliquid assumenda fugiat commodi.\nVoluptatem a magni voluptatibus qui voluptatem fuga enim aut.\nAdipisci quas et.",
                            KeyResponsibilities = "Illum aspernatur nam inventore rem dolores asperiores ipsa. Officiis beatae ea nemo incidunt rerum ut. Eius aut hic alias non illo ea. Dolor mollitia occaecati enim quasi et deleniti. Deserunt eum aliquam aut.",
                            MinRequirements = "Voluptatem nesciunt repudiandae est odit est repudiandae voluptatem eaque dolorem. Distinctio veniam voluptas iste id quis ipsa. Non exercitationem ut rem minus. Dignissimos mollitia quaerat quo pariatur est. Possimus voluptas dolor autem dicta et. Quo dolorum eos iste ex et voluptate voluptatem porro officia.",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 6, 21, 8, 38, 11, 684, DateTimeKind.Local).AddTicks(4317),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 93,
                            ApplicationInstructions = "Dolorum expedita quod id. Non earum quia aut incidunt quia sed aspernatur voluptatem. Et doloremque ea et ipsum similique quis sed distinctio. Repudiandae quos voluptatibus excepturi itaque aut nostrum fugit.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 12, 11, 15, 8, 17, 198, DateTimeKind.Local).AddTicks(8983),
                            ContactEmail = "Ignacio62@yahoo.com",
                            ContactNumber = "733-721-2494 x53506",
                            ContactPerson = "Ignacio Gibson",
                            DepartmentId = 17,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 7, 5, 9, 25, 35, 262, DateTimeKind.Local).AddTicks(4996),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 232.9707342353513,
                            Internal = true,
                            JobDescription = "Ipsum laudantium quia. Minima in maiores aspernatur laboriosam. In enim perferendis. Sunt in rerum consequatur. Et suscipit sed vitae. Ut iusto a nam eaque aliquid repudiandae nihil consequuntur ipsa.",
                            JobLocation = "tempore",
                            JobTitle = "voluptates",
                            KeyResponsibilities = "Est culpa amet velit. Architecto rerum deleniti nulla quam sed et. Necessitatibus voluptatem est ab vel.",
                            MinRequirements = "Voluptas odio quia veritatis maiores magni. Ratione ut laudantium ut. Culpa at ducimus architecto ratione et.",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 1, 29, 0, 34, 41, 607, DateTimeKind.Local).AddTicks(7406),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 94,
                            ApplicationInstructions = "Exercitationem sequi aut sed nihil nostrum placeat saepe voluptas et. Esse itaque suscipit autem et mollitia aliquid. Iusto voluptatem sed. Veritatis aliquid velit nemo qui aut aut quidem qui.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2024, 1, 28, 10, 45, 13, 361, DateTimeKind.Local).AddTicks(8542),
                            ContactEmail = "Joan.Rowe23@hotmail.com",
                            ContactNumber = "907-838-3162",
                            ContactPerson = "Joan Rowe",
                            DepartmentId = 8,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 9, 9, 10, 12, 17, 544, DateTimeKind.Local).AddTicks(5676),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 308.63198792032523,
                            Internal = false,
                            JobDescription = "Nam est facilis adipisci corporis neque optio nostrum omnis consequuntur. Beatae a aut. Repellat velit eum praesentium. Nam omnis autem maxime amet tempora maiores aliquid repellendus eius.",
                            JobLocation = "quibusdam",
                            JobTitle = "doloremque",
                            KeyResponsibilities = "Assumenda temporibus ea ab rerum id accusantium est. Doloremque enim labore velit dolore aut optio aut. Corrupti sit et incidunt eveniet consequatur architecto dolor nisi molestias. Sit officiis quae perferendis odio vel non. Dolor excepturi nesciunt. Maiores quisquam quo sint doloribus repellendus odit tempore.",
                            MinRequirements = "Neque perspiciatis laborum voluptas sed necessitatibus qui reiciendis assumenda qui. Tempora quia nesciunt modi modi possimus et. Est accusantium deleniti sit est sint molestias sit sunt dicta. Labore quo accusantium nisi quo quas. Tempore nulla quia laborum et maxime.",
                            PartTimeHours = "6 - 8",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 7, 3, 4, 9, 59, 198, DateTimeKind.Local).AddTicks(8178),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 95,
                            ApplicationInstructions = "Sunt sit nesciunt et alias animi esse nihil laboriosam aliquam. A est enim quis. Consequuntur animi est sint quam autem esse dolor officiis dignissimos.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2024, 6, 5, 19, 8, 40, 546, DateTimeKind.Local).AddTicks(2181),
                            ContactEmail = "Randy_Bergstrom0@hotmail.com",
                            ContactNumber = "(591) 959-0503 x16276",
                            ContactPerson = "Randy Bergstrom",
                            DepartmentId = 32,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 3, 13, 9, 19, 15, 747, DateTimeKind.Local).AddTicks(7984),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 286.37172518594735,
                            Internal = true,
                            JobDescription = "Et consequuntur eos. Ut reprehenderit laboriosam ut dignissimos dolorem iste qui optio omnis. Est aut ut voluptatibus molestiae sunt cum. Dicta incidunt error quos. Animi vel maxime iste.",
                            JobLocation = "sapiente",
                            JobTitle = "Non sed nemo quam vel aut voluptatem occaecati corporis.",
                            KeyResponsibilities = "Illum accusamus est est assumenda quidem laudantium numquam sint. Ut ab nam reiciendis eveniet qui placeat et beatae repellat. Quis dolor reprehenderit sunt nihil vel animi qui omnis.",
                            MinRequirements = "Quae consequatur maxime fuga nihil debitis est odit explicabo maxime. Autem enim et rerum odio deleniti eum ad qui. Quae consequatur ducimus dicta.",
                            PartTimeHours = "> 12",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 2, 26, 12, 6, 49, 548, DateTimeKind.Local).AddTicks(8322),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 96,
                            ApplicationInstructions = "Placeat dignissimos quisquam. Repudiandae molestias officiis impedit. Eos rem velit iusto maxime quasi. Quo corrupti nulla neque eos ab illo. Ad rem iusto magnam vitae similique.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 8, 22, 6, 11, 13, 589, DateTimeKind.Local).AddTicks(6840),
                            ContactEmail = "Nathan.Runolfsdottir@hotmail.com",
                            ContactNumber = "278-986-5654",
                            ContactPerson = "Nathan Runolfsdottir",
                            DepartmentId = 13,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 3, 8, 23, 24, 53, 237, DateTimeKind.Local).AddTicks(5836),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 158.36606664041341,
                            Internal = true,
                            JobDescription = "Quia sunt omnis quia veniam minima eum harum consequatur. Voluptas ratione totam occaecati ullam recusandae. Autem pariatur consectetur. Unde ratione cumque reprehenderit voluptatem.",
                            JobLocation = "eveniet",
                            JobTitle = "Fuga et officiis.",
                            KeyResponsibilities = "Ut nisi consectetur et aliquam natus expedita numquam. Praesentium non et non facere. Quas ipsum impedit porro. Voluptatum et earum at vel.",
                            MinRequirements = "Eum natus amet omnis delectus placeat. Veniam tenetur quod numquam quia nostrum provident quasi adipisci. Quos atque iure qui ad similique qui sint. Quia ut est in. Ab quis quia enim expedita. Soluta et nesciunt ipsum.",
                            PartTimeHours = "> 12",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 10, 27, 19, 40, 28, 864, DateTimeKind.Local).AddTicks(9837),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 97,
                            ApplicationInstructions = "Error illo amet labore non. Dolore est quas. Nihil ducimus quia dolor aspernatur placeat.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2023, 8, 16, 9, 3, 6, 796, DateTimeKind.Local).AddTicks(1143),
                            ContactEmail = "Myra76@yahoo.com",
                            ContactNumber = "783-769-4433 x1880",
                            ContactPerson = "Myra Marquardt",
                            DepartmentId = 8,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2023, 10, 4, 19, 22, 42, 722, DateTimeKind.Local).AddTicks(1476),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 281.57737270536711,
                            Internal = false,
                            JobDescription = "Illum autem error rerum. Odio impedit in quam eveniet nulla. Eveniet et quo ut quis odit voluptatum amet exercitationem. Quis sapiente quis magnam earum. Et magni eum labore autem.",
                            JobLocation = "et",
                            JobTitle = "Quibusdam soluta expedita placeat.",
                            KeyResponsibilities = "Distinctio ut nulla qui excepturi natus id omnis aut doloribus. Quam rerum laudantium molestias animi. Ratione et consequatur rerum nostrum excepturi est. Eum error quas unde eligendi qui est et nisi eligendi. Sed natus quod vel id at quia reprehenderit sapiente autem.",
                            MinRequirements = "Cumque adipisci vitae excepturi magnam neque consequatur consequatur quo. Placeat nobis asperiores incidunt. Fugit ut unde voluptas.",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 2, 9, 12, 43, 17, 779, DateTimeKind.Local).AddTicks(3410),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 98,
                            ApplicationInstructions = "Nihil molestiae eum. Tempore sit sed earum maxime. Magnam nisi sit odio dolorum expedita odit dolorem. Qui aut dignissimos rerum qui commodi ratione aperiam id.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2024, 5, 5, 22, 20, 4, 761, DateTimeKind.Local).AddTicks(8772),
                            ContactEmail = "Manuel93@gmail.com",
                            ContactNumber = "333.574.2254 x0517",
                            ContactPerson = "Manuel Runte",
                            DepartmentId = 11,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 1, 27, 9, 39, 37, 704, DateTimeKind.Local).AddTicks(2095),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 77.540859779129207,
                            Internal = false,
                            JobDescription = "Earum assumenda est amet. Occaecati dicta voluptatem omnis sit et ducimus est inventore. Rerum nam error. Perferendis provident id. Hic beatae voluptatibus. Recusandae et cupiditate maiores excepturi.",
                            JobLocation = "amet",
                            JobTitle = "Dolorum ratione nam aut sunt temporibus.\nMolestiae dolor natus porro qui.\nDeleniti deleniti rem error quod impedit.\nEst est odit autem.\nSequi qui accusantium ut.",
                            KeyResponsibilities = "Modi exercitationem sed ut occaecati. Itaque dignissimos quod totam et ipsum occaecati voluptatem optio et. Quae excepturi rerum dignissimos quibusdam iste.",
                            MinRequirements = "Eaque accusamus et esse qui dolore vitae soluta ullam. Quis eveniet non sapiente sunt et. Delectus id eaque id officia. Sed expedita tenetur voluptatibus fugiat sequi illum. Quod quod quam atque doloremque quasi. Nisi modi sunt.",
                            PostStatus = 2,
                            StartDate = new DateTime(2022, 11, 14, 2, 43, 2, 808, DateTimeKind.Local).AddTicks(3488),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 99,
                            ApplicationInstructions = "Est illum deleniti et ipsum. Dignissimos vero qui consequatur porro iste qui. Harum et ut laborum. Exercitationem quas beatae autem iure.",
                            CitizensOnly = false,
                            ClosingDate = new DateTime(2024, 3, 24, 2, 57, 19, 954, DateTimeKind.Local).AddTicks(3452),
                            ContactEmail = "Latoya.Ortiz@yahoo.com",
                            ContactNumber = "(950) 615-1160 x52449",
                            ContactPerson = "Latoya Ortiz",
                            DepartmentId = 9,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 3, 19, 11, 53, 48, 685, DateTimeKind.Local).AddTicks(2183),
                            FacultyId = 1,
                            FullTime = true,
                            HourlyRate = 388.35474505943932,
                            Internal = false,
                            JobDescription = "Quae a aut sed natus amet deserunt ut. Et eius incidunt enim dolorem. Sed itaque accusamus corrupti. Ratione maiores ducimus sint itaque sunt et quasi. Laborum accusantium explicabo perferendis rem error corrupti placeat veniam.",
                            JobLocation = "dignissimos",
                            JobTitle = "Accusamus quo pariatur aperiam.\nPraesentium eos delectus eos et.\nEt omnis veritatis excepturi mollitia animi rem facere cupiditate sed.\nEveniet consequuntur eius quibusdam voluptatem tempore repellendus expedita.\nA repellendus ut fugit minus nam.\nPlaceat aut non aut voluptatum aut adipisci ratione et quas.",
                            KeyResponsibilities = "Soluta aut omnis odio. Quia illum est. Perspiciatis velit totam dolor deleniti quos earum vitae culpa. Omnis non cumque quisquam omnis deserunt labore consectetur autem non. Debitis possimus eligendi. Reiciendis blanditiis dolor ut sint voluptates sint earum.",
                            MinRequirements = "Omnis laudantium cumque asperiores. Aliquam veritatis laboriosam iste velit modi voluptatibus. Repellat nulla vel sit voluptatem.",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 4, 22, 17, 50, 4, 817, DateTimeKind.Local).AddTicks(5224),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        },
                        new
                        {
                            PostId = 100,
                            ApplicationInstructions = "Nihil est sit soluta vero est. Ipsum et totam dolor. Dolorem quasi ab doloremque est ea odit velit sit. Id et sunt quia commodi quis ea aspernatur facere suscipit.",
                            CitizensOnly = true,
                            ClosingDate = new DateTime(2024, 3, 3, 18, 58, 58, 70, DateTimeKind.Local).AddTicks(1169),
                            ContactEmail = "Cedric4@gmail.com",
                            ContactNumber = "620-786-7487 x827",
                            ContactPerson = "Cedric Streich",
                            DepartmentId = 10,
                            EmployerId = "4abcac17-0318-4255-887d-74fe05547547",
                            EndDate = new DateTime(2024, 6, 29, 6, 28, 15, 270, DateTimeKind.Local).AddTicks(9179),
                            FacultyId = 1,
                            FullTime = false,
                            HourlyRate = 150.28581921955842,
                            Internal = false,
                            JobDescription = "Fugit ut recusandae illo enim perspiciatis consequuntur ut officiis consequatur. Blanditiis minus beatae sint et expedita. Iste voluptatem ea quisquam accusamus minima deserunt. Quia dolor voluptas provident porro nulla et et.",
                            JobLocation = "tenetur",
                            JobTitle = "Magni natus quis ab aut consequatur quas. Iure quis blanditiis animi odio ipsum dolor quaerat. Reprehenderit consequatur expedita praesentium sed eius ut.",
                            KeyResponsibilities = "Et natus tenetur vel quia. Nihil aut ducimus. Id nemo laborum et est a aliquid eaque quia neque.",
                            MinRequirements = "Et et vel error ducimus dignissimos explicabo. Laboriosam earum nulla voluptas porro rerum cum. Neque ex eveniet laboriosam quisquam dolor occaecati.",
                            PartTimeHours = "< 2",
                            PostStatus = 2,
                            StartDate = new DateTime(2023, 3, 29, 17, 25, 54, 784, DateTimeKind.Local).AddTicks(7670),
                            limitedToFirst = false,
                            limitedToHonours = false,
                            limitedToMasters = false,
                            limitedToPhD = false,
                            limitedToPostDoc = false,
                            limitedToSecond = false,
                            limitedToThird = false
                        });
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Race", b =>
                {
                    b.Property<int>("RaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RaceId"));

                    b.Property<string>("RaceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RaceId");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            RaceId = 1,
                            RaceName = "Black"
                        },
                        new
                        {
                            RaceId = 2,
                            RaceName = "White"
                        },
                        new
                        {
                            RaceId = 3,
                            RaceName = "Coloured"
                        },
                        new
                        {
                            RaceId = 4,
                            RaceName = "Indian"
                        },
                        new
                        {
                            RaceId = 5,
                            RaceName = "Other"
                        });
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Referee", b =>
                {
                    b.Property<int>("RefereeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefereeId"));

                    b.Property<int>("CellNumber")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RefereeId");

                    b.HasIndex("StudentUserId");

                    b.ToTable("Referees");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Student", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Achievements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerObjective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Citizen")
                        .HasColumnType("bit");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Interests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LicenseId")
                        .HasColumnType("int");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.Property<string>("Skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentIdNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearOfStudyId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("GenderId");

                    b.HasIndex("LicenseId");

                    b.HasIndex("RaceId");

                    b.HasIndex("YearOfStudyId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleId"));

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TitleId");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            TitleId = 1,
                            TitleName = "Mr"
                        },
                        new
                        {
                            TitleId = 2,
                            TitleName = "Mrs"
                        },
                        new
                        {
                            TitleId = 3,
                            TitleName = "Miss"
                        },
                        new
                        {
                            TitleId = 4,
                            TitleName = "Dr"
                        },
                        new
                        {
                            TitleId = 5,
                            TitleName = "Prof"
                        },
                        new
                        {
                            TitleId = 6,
                            TitleName = "Other"
                        });
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.WorkExperience", b =>
                {
                    b.Property<int>("WorkExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkExperienceId"));

                    b.Property<string>("EmployerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TasksAndResponsibilities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkExperienceId");

                    b.HasIndex("StudentUserId");

                    b.ToTable("WorkExperience");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.YearOfStudy", b =>
                {
                    b.Property<int>("YearOfStudyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YearOfStudyId"));

                    b.Property<string>("YearOfStudyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YearOfStudyId");

                    b.ToTable("YearOfStudies");

                    b.HasData(
                        new
                        {
                            YearOfStudyId = 1,
                            YearOfStudyName = "First Year"
                        },
                        new
                        {
                            YearOfStudyId = 2,
                            YearOfStudyName = "Second Year"
                        },
                        new
                        {
                            YearOfStudyId = 3,
                            YearOfStudyName = "Third Year"
                        },
                        new
                        {
                            YearOfStudyId = 4,
                            YearOfStudyName = "Honours"
                        },
                        new
                        {
                            YearOfStudyId = 5,
                            YearOfStudyName = "Masters"
                        },
                        new
                        {
                            YearOfStudyId = 6,
                            YearOfStudyName = "PhD"
                        },
                        new
                        {
                            YearOfStudyId = 7,
                            YearOfStudyName = "PostDoc"
                        });
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.AppUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("CellNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AppUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Application", b =>
                {
                    b.HasOne("StudentEmployementPortal.Models.JobPost", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentEmployementPortal.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Document", b =>
                {
                    b.HasOne("StudentEmployementPortal.Models.Application", "Application")
                        .WithMany("Documents")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Education", b =>
                {
                    b.HasOne("StudentEmployementPortal.Models.Student", "Student")
                        .WithMany("Education")
                        .HasForeignKey("StudentUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Employer", b =>
                {
                    b.HasOne("StudentEmployementPortal.Models.BusinessType", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentEmployementPortal.Models.Title", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentEmployementPortal.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessType");

                    b.Navigation("Title");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.JobPost", b =>
                {
                    b.HasOne("StudentEmployementPortal.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentEmployementPortal.Models.Employer", "Employer")
                        .WithMany()
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentEmployementPortal.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employer");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Referee", b =>
                {
                    b.HasOne("StudentEmployementPortal.Models.Student", "Student")
                        .WithMany("Referee")
                        .HasForeignKey("StudentUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Student", b =>
                {
                    b.HasOne("StudentEmployementPortal.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentEmployementPortal.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentEmployementPortal.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentEmployementPortal.Models.DriversLicense", "License")
                        .WithMany()
                        .HasForeignKey("LicenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentEmployementPortal.Models.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentEmployementPortal.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentEmployementPortal.Models.YearOfStudy", "YearOfStudy")
                        .WithMany()
                        .HasForeignKey("YearOfStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Faculty");

                    b.Navigation("Gender");

                    b.Navigation("License");

                    b.Navigation("Race");

                    b.Navigation("User");

                    b.Navigation("YearOfStudy");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.WorkExperience", b =>
                {
                    b.HasOne("StudentEmployementPortal.Models.Student", "Student")
                        .WithMany("WorkExperience")
                        .HasForeignKey("StudentUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Application", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("StudentEmployementPortal.Models.Student", b =>
                {
                    b.Navigation("Education");

                    b.Navigation("Referee");

                    b.Navigation("WorkExperience");
                });
#pragma warning restore 612, 618
        }
    }
}
