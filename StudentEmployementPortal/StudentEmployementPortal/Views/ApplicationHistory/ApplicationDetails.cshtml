@model StudentEmployementPortal.ViewModels.ApplicationDetailsViewModel
@using System.Globalization

@{
    ViewData["Title"] = "PostDetails";
}

@{

    DateTime dateStart = new DateTime(Model.Application.Post.StartDate.Value.Year, Model.Application.Post.StartDate.Value.Month, Model.Application.Post.StartDate.Value.Day);
    DateTime dateEnd = new DateTime(Model.Application.Post.EndDate.Value.Year, Model.Application.Post.EndDate.Value.Month, Model.Application.Post.EndDate.Value.Day);
    DateTime dateClose = new DateTime(Model.Application.Post.ClosingDate.Value.Year, Model.Application.Post.ClosingDate.Value.Month, Model.Application.Post.ClosingDate.Value.Day);
}

<style>
    .right-align {
        float: right;
    }

    .left-align {
        float: left;
    }
</style>

<div>
    <a asp-controller="ApplicationHistory" asp-action="Index" class="btn btn-secondary right-align ">
        Back
    </a>
    <form method="post">
        <button type="submit" class="btn btn-outline-dark right-align" asp-controller="ApplicationHistory" asp-action="Withdraw" asp-route-id="@Model.ApplicationId"
                disabled="@(Model.Application.ApplicationStatus != StudentEmployementPortal.Utils.Enums.ApplicationStatus.Pending)">
            Withdraw Application
        </button>
    </form>
</div>
<div class="row pb-2">
    <h2 class="text-primary">Application Details</h2>
</div>
<hr />

<div class="text-center">
    <h5 style="font-weight:bold">APPLICATION STATUS</h5>
    @if (Model.Application.ApplicationStatus == StudentEmployementPortal.Utils.Enums.ApplicationStatus.Appointed)
    {
        <h5 class="text-success" style="font-weight:bold"> @Model.Application.ApplicationStatus</h5>
    }
    else if (Model.Application.ApplicationStatus == StudentEmployementPortal.Utils.Enums.ApplicationStatus.Rejected)
    {
        <h5 class="text-danger" style="font-weight:bold"> @Model.Application.ApplicationStatus</h5>
    }
    else
    {
        <h5 class="text-warning" style="font-weight:bold"> @Model.Application.ApplicationStatus</h5>
    }
</div>
<br />
<div class="form-control">
    <div>
        <form method="post" enctype="multipart/form-data" id="uploadForm">
            <div>
                <h4 class="text-primary text-center">Uploaded Documents</h4>
                <hr />
                <br />
                <div class="row">
                    <div class="col-sm-5">
                        <label>File</label>
                        <input type="file" name="File" id="File" asp-for="@Model.File" 
                        multiple class="form-control"
                        accept=".pdf"
                        onchange="validateFileType(this)"
                        disabled="@(Model.Application.ApplicationStatus != StudentEmployementPortal.Utils.Enums.ApplicationStatus.Pending)" />
                        <span asp-validation-for="File" id="fileValidation" class="text-danger"></span>
                    </div>
                    <div class="col-sm-5">
                        <label>File Description</label>
                        <input asp-for="@Model.FileDescription"
                               disabled="@(Model.Application.ApplicationStatus != StudentEmployementPortal.Utils.Enums.ApplicationStatus.Pending)"
                               class="form-control" 
                               id="fileDescription"/>
                        <span asp-validation-for="FileDescription" id="fileDescValidation" class="text-danger"></span>
                    </div>
                    <div class="col-sm-2 d-flex align-items-center justify-content-center">
                        <input type="submit" value="Upload" asp-controller="ApplicationHistory" asp-action="Upload" asp-route-id="@Model.ApplicationId"
                               disabled="@(Model.Application.ApplicationStatus != StudentEmployementPortal.Utils.Enums.ApplicationStatus.Pending)"
                               class="btn btn-outline-primary mt-md-4" 
                               id="uploadButton"/>
                    </div>
                </div>
                <br />
                @if (Model.Application.Documents == null || Model.Application.Documents.Count() == 0)
                {
                    <h6 class="text-center">There are no documents uploaded.</h6>
                }
                else
                {
                    <table class="table table-borderless" style="width:100%">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Description</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var doc in Model.Application.Documents)
                            {
                                <tr>
                                    <td class="m-2">
                                        <a href="~/Uploads/@doc.FileName" target="_blank">@doc.FileName</a>
                                    </td>
                                    <td>
                                        @doc.FileDescription
                                    </td>
                                    <td class="text-center">
                                        <button type="submit" class="btn btn-outline-danger" asp-action="DeleteConfirmed" asp-route-id="@doc.DocumentId"
                                                disabled="@(Model.Application.ApplicationStatus != StudentEmployementPortal.Utils.Enums.ApplicationStatus.Pending)">
                                            Delete
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </form>
    </div>
</div>
<br />
<div class="form-control mb-2 pb-2">
    <h4 class="text-primary text-center">Job Post Details</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-4">
            Department
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Application.Post.Department.DepartmentName)
        </dd>

        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Application.Post.JobTitle)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Application.Post.JobTitle)
        </dd>

        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Application.Post.JobLocation)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Application.Post.JobLocation)
        </dd>

        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Application.Post.JobDescription)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Application.Post.JobDescription)
        </dd>

        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Application.Post.KeyResponsibilities)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Application.Post.KeyResponsibilities)
        </dd>

        <dt class="col-sm-4">
            Fulltime / Part-time
        </dt>
        @if (Model.Application.Post.FullTime == true)
        {
            <dd class="col-sm-8">
                Fulltime
            </dd>
        }
        else if (Model.Application.Post.FullTime == false)
        {
            <dd class="col-sm-8">
                Part-time
            </dd>

            <dd></dd>

            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Application.Post.PartTimeHours)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Application.Post.PartTimeHours) hours per week
            </dd>
        }
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Application.Post.HourlyRate)
        </dt>
        <dd class="col-sm-8">
            R@(Html.DisplayFor(model => model.Application.Post.HourlyRate))
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Application.Post.StartDate)
        </dt>
        <dd class="col-sm-8">
            @Model.Application.Post.StartDate.Value.Day @dateStart.ToString("MMMM", CultureInfo.InvariantCulture) @Model.Application.Post.StartDate.Value.Year
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Application.Post.EndDate)
        </dt>
        <dd class="col-sm-8">
            @Model.Application.Post.EndDate.Value.Day @dateEnd.ToString("MMMM", CultureInfo.InvariantCulture) @Model.Application.Post.EndDate.Value.Year
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Application.Post.MinRequirements)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Application.Post.MinRequirements)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Application.Post.ClosingDate)
        </dt>
        <dd class="col-sm-8 text-danger" style="font-weight:bold">
            @Model.Application.Post.ClosingDate.Value.Day @dateClose.ToString("MMMM", CultureInfo.InvariantCulture) @Model.Application.Post.ClosingDate.Value.Year
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Application.Post.ApplicationInstructions)
        </dt>
        <dd class="col-sm-8 text-danger" style="font-weight:bold">
            @Html.DisplayFor(model => model.Application.Post.ApplicationInstructions)
        </dd>
    </dl>
</div>
<br />

@section Scripts {
    <script>
        $(document).ready(function () {
            // Disable the upload button initially
            $('#uploadButton').prop('disabled', true);

            // Enable or disable the upload button based on file description input
            $('#fileDescription').on('input', function () {
                var fileDescription = $(this).val();
                $('#uploadButton').prop('disabled', !fileDescription);
            });
        });

        function validateFileType(input) {
            var allowedExtensions = /(\.pdf)$/i;
            var file = input.files[0];
            var fileDescription = $('#fileDescription').val();

            // Check file extension
            if (!allowedExtensions.test(file.name)) {
                $(input).val(''); // Clear the selected file
                $('#fileValidation').text('Please select a PDF file.');
                return false;
            }

            // Check file size (in bytes)
            var fileSizeInBytes = file.size;
            var maxSizeInBytes = 5 * 1024 * 1024; //
            if (fileSizeInBytes > maxSizeInBytes) {
                $(input).val(''); // Clear the selected file
                $('#fileValidation').text('File size exceeds the maximum limit (5MB).');
                return false;
            }

            // Check file description
            if (!fileDescription) {
                $('#fileDescValidation').text('Please provide a file description.');
                return false;
            }

            // Clear any error messages
            $('#fileValidation').text('');
            $('#fileDescValidation').text('');

            return true;
        }

    </script>

}


